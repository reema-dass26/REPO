{
  "ML_EXP_run_id": "f9bb042a0d244362b0daacf6bc782cb6",
  "ML_EXP_run_name": "youthful-zebra-111",
  "ML_EXP_experiment_id": "0",
  "ML_EXP_start_time": 1746350303185,
  "ML_EXP_end_time": null,
  "ML_EXP_params": {
    "bootstrap": "True",
    "ccp_alpha": "0.0",
    "class_weight": "None",
    "criterion": "entropy",
    "dataset.authors": "[\"Marshall Michael\"]",
    "dataset.doi": "10.5281/ZENODO.1404173",
    "dataset.published": "2018-8-27",
    "dataset.publisher": "Zenodo",
    "dataset.title": "Scikit-Learn Iris",
    "hostname": "Purplish",
    "Internal_DBRepo_columns_raw": "['id', 'sepallengthcm', 'sepalwidthcm', 'petallengthcm', 'petalwidthcm', 'species']",
    "Internal_DBRepo_dropped_columns": "['id']",
    "Internal_DBRepo_feature_names": "['sepallengthcm', 'sepalwidthcm', 'petallengthcm', 'petalwidthcm']",
    "Internal_DBRepo_n_features_final": "4",
    "Internal_DBRepo_n_records": "150",
    "Internal_DBRepo_retrieval_time": "2025-05-04T09:18:25.091301",
    "matplotlib_version": "3.7.2",
    "max_depth": "12",
    "max_features": "sqrt",
    "max_leaf_nodes": "None",
    "max_samples": "None",
    "min_impurity_decrease": "0.0",
    "min_samples_leaf": "2",
    "min_samples_split": "5",
    "min_weight_fraction_leaf": "0.0",
    "ML_EXP_n_features": "4",
    "ML_EXP_n_test_samples": "30",
    "ML_EXP_n_train_samples": "120",
    "ML_EXP_random_state": "42",
    "ML_EXP_test_size": "0.2",
    "numpy_version": "1.24.4",
    "n_estimators": "200",
    "n_jobs": "-1",
    "oob_score": "False",
    "os_platform": "Windows 10",
    "os_version": "10.0.26100",
    "pandas_version": "2.2.3",
    "platform": "Windows",
    "project_id": "default_project",
    "python_version": "3.11.5",
    "random_state": "42",
    "role": "collaborator",
    "seaborn_version": "0.12.2",
    "session_id": "1b1126e7-6971-49c5-b6d2-a582207d05b0",
    "shap_version": "0.47.1",
    "sklearn_version": "1.3.0",
    "timestamp_utc": "2025-05-03T19:05:00.655283",
    "username": "reema",
    "verbose": "1",
    "warm_start": "False"
  },
  "ML_EXP_metrics": {
    "Internal_DBRepo_num_deletes": 0.0,
    "Internal_DBRepo_num_inserts": 1.0,
    "Internal_DBRepo_row_count_end": 150.0,
    "Internal_DBRepo_row_count_start": 150.0,
    "ML_EXP_accuracy": 1.0,
    "ML_EXP_f1_macro": 1.0,
    "ML_EXP_precision_macro": 1.0,
    "ML_EXP_recall_macro": 1.0,
    "ML_EXP_roc_auc": 1.0,
    "training_accuracy_score": 0.9666666666666667,
    "training_f1_score": 0.9666666666666667,
    "training_log_loss": 0.0653522301195834,
    "training_precision_score": 0.9674588284344383,
    "training_recall_score": 0.9666666666666667,
    "training_roc_auc": 0.9987492182614135,
    "training_score": 0.9666666666666667
  },
  "ML_EXP_tags": {
    "CR_encodingFormat": "text/csv",
    "CR_Field": "Input features used for training",
    "CR_RecordSet": "Feature vectors for model training",
    "estimator_class": "sklearn.ensemble._forest.RandomForestClassifier",
    "estimator_name": "RandomForestClassifier",
    "FAIR4ML_ethicalLegalSocial": "No ethical risks; trained on open dataset",
    "FAIR4ML_fineTunedFrom": "None",
    "FAIR4ML_hasCO2eEmissions": "Low; trained locally on a small dataset",
    "FAIR4ML_intendedUse": "Multiclass classification using RandomForest",
    "FAIR4ML_modelRisks": "May misclassify overlapping species",
    "FAIR4ML_num_samples": "150",
    "FAIR4ML_serializationFormat": "pickle",
    "FAIR4ML_sharedBy": "Your Name or Organization",
    "FAIR4ML_target_variable": "species",
    "FAIR4ML_usageInstructions": "Call `.predict()` on a feature-aligned DataFrame",
    "FAIR_num_samples": "150",
    "FAIR_target_variable": "species",
    "GIT_current_commit_hash": "8a9e8a669110657fe06304f57c9bbe7d099e5f81",
    "GIT_current_commit_url": "https://github.com/reema-dass26/REPO/commit/8a9e8a669110657fe06304f57c9bbe7d099e5f81",
    "GIT_previous_commit_hash": "fbd10686b8bcaef7a97f77c641ad3c65a7779ee1",
    "Internal_DBRepo_database_access_url": "http://localhost/api/database/c3a42d17-42b7-43c9-a504-2363fb4c9c8d",
    "Internal_DBRepo_database_creator": "Reema George Dass",
    "Internal_DBRepo_database_description": "None",
    "Internal_DBRepo_database_identifier": "c3a42d17-42b7-43c9-a504-2363fb4c9c8d",
    "Internal_DBRepo_database_publication_date": "2025-04-23T20:42:29.501Z",
    "Internal_DBRepo_database_publisher": "Reema George Dass",
    "Internal_DBRepo_database_schema_public": "True",
    "Internal_DBRepo_database_title": "Iris",
    "Internal_DBRepo_database_version": "info not available",
    "Internal_DBRepo_data_source": "http://localhost/api/database/c3a42d17-42b7-43c9-a504-2363fb4c9c8d/table/5315e7da-64fb-4fdb-b493-95b4138c765f/data?size=100000&page=0",
    "Internal_DBRepo_table_last_modified": "2025-04-23T20:42:29.501Z",
    "Internal_DBRepo_target_name": "[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 2 2 2 2 2 2 2 2 2 2 2\n 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2\n 2 2]",
    "justification_bootstrap": "No justification provided",
    "justification_class_weight": "No justification provided",
    "justification_criterion": "No justification provided",
    "justification_max_depth": "No justification provided",
    "justification_max_features": "No justification provided",
    "justification_min_samples_leaf": "No justification provided",
    "justification_min_samples_split": "No justification provided",
    "justification_ML_EXP_dataset_version": "No justification provided",
    "justification_ML_EXP_drop_column_X": "No justification provided",
    "justification_ML_EXP_experiment_name": "No justification provided",
    "justification_ML_EXP_metric_choice": "No justification provided",
    "justification_ML_EXP_model_choice": "No justification provided",
    "justification_ML_EXP_target_variable": "No justification provided",
    "justification_ML_EXP_test_split": "No justification provided",
    "justification_ML_EXP_threshold_accuracy": "No justification provided",
    "justification_n_estimators": "No justification provided",
    "justification_n_jobs": "No justification provided",
    "justification_oob_score": "No justification provided",
    "justification_random_state": "No justification provided",
    "justification_verbose": "No justification provided",
    "mlflow.log-model.history": "[{\"run_id\": \"f9bb042a0d244362b0daacf6bc782cb6\", \"artifact_path\": \"model\", \"utc_time_created\": \"2025-05-04 09:18:33.102582\", \"model_uuid\": \"254d5859aefd42e2b780dee1dd8fea1b\", \"flavors\": {\"python_function\": {\"model_path\": \"model.pkl\", \"predict_fn\": \"predict\", \"loader_module\": \"mlflow.sklearn\", \"python_version\": \"3.11.5\", \"env\": {\"conda\": \"conda.yaml\", \"virtualenv\": \"python_env.yaml\"}}, \"sklearn\": {\"pickled_model\": \"model.pkl\", \"sklearn_version\": \"1.3.0\", \"serialization_format\": \"cloudpickle\", \"code\": null}}}]",
    "mlflow.runName": "youthful-zebra-111",
    "mlflow.source.name": "C:\\Users\\reema\\AppData\\Roaming\\Python\\Python311\\site-packages\\ipykernel_launcher.py",
    "mlflow.source.type": "LOCAL",
    "mlflow.user": "reema",
    "MLSEA_computeEnvironment": "{\"os\": \"Windows 10\", \"cpu\": \"AMD64 Family 25 Model 68 Stepping 1, AuthenticAMD\", \"ram_gb\": 13.69, \"python_version\": \"3.11.5\", \"sklearn_version\": \"1.3.0\", \"pandas_version\": \"2.2.3\", \"numpy_version\": \"1.24.4\"}",
    "MLSEA_dataPreprocessing": "{\"label_encoding\": {\"0\": \"Iris-setosa\", \"1\": \"Iris-versicolor\", \"2\": \"Iris-virginica\"}}",
    "MLSEA_evaluationMetrics": "{\"accuracy\": 1.0, \"precision_macro\": 1.0, \"recall_macro\": 1.0, \"f1_macro\": 1.0, \"roc_auc\": 1.0}",
    "MLSEA_experimentId": "f9bb042a0d244362b0daacf6bc782cb6",
    "MLSEA_hyperparameters": "{\"n_estimators\": 200, \"criterion\": \"entropy\", \"max_depth\": 12, \"min_samples_split\": 5, \"min_samples_leaf\": 2, \"max_features\": \"sqrt\", \"bootstrap\": true, \"oob_score\": false, \"class_weight\": null, \"random_state\": 42, \"verbose\": 1, \"n_jobs\": -1}",
    "MLSEA_improvedFrom": "baseline_randomforest_2024",
    "MLSEA_justification_bootstrap": "No justification provided",
    "MLSEA_justification_class_weight": "No justification provided",
    "MLSEA_justification_criterion": "No justification provided",
    "MLSEA_justification_max_depth": "No justification provided",
    "MLSEA_justification_max_features": "No justification provided",
    "MLSEA_justification_min_samples_leaf": "No justification provided",
    "MLSEA_justification_min_samples_split": "No justification provided",
    "MLSEA_justification_ML_EXP_dataset_version": "No justification provided",
    "MLSEA_justification_ML_EXP_drop_column_X": "No justification provided",
    "MLSEA_justification_ML_EXP_experiment_name": "No justification provided",
    "MLSEA_justification_ML_EXP_metric_choice": "No justification provided",
    "MLSEA_justification_ML_EXP_model_choice": "No justification provided",
    "MLSEA_justification_ML_EXP_target_variable": "No justification provided",
    "MLSEA_justification_ML_EXP_test_split": "No justification provided",
    "MLSEA_justification_ML_EXP_threshold_accuracy": "No justification provided",
    "MLSEA_justification_n_estimators": "No justification provided",
    "MLSEA_justification_n_jobs": "No justification provided",
    "MLSEA_justification_oob_score": "No justification provided",
    "MLSEA_justification_random_state": "No justification provided",
    "MLSEA_justification_verbose": "No justification provided",
    "MLSEA_modelArchitecture": "RandomForestClassifier",
    "MLSEA_modelPath": "RandomForest_Iris_v20250504_111825.pkl",
    "MLSEA_performanceInterpretation": "Model performs well with F1 macro > 0.90. ROC AUC confirms balanced performance across all classes.",
    "MLSEA_previousModelRunId": "None",
    "MLSEA_trainingCodeSnapshot": "e863239878717de3d9d08326af0dd0c032b8a512",
    "MLSEA_trainingProcedure": "train_test_split with test_size=0.2, random_state=42",
    "ML_EXP_dataset_id": "iris_local",
    "ML_EXP_dataset_name": "Iris",
    "ML_EXP_dataset_version": "1.0.0",
    "ML_EXP_model_name": "RandomForest_Iris_v20250504_111825",
    "ML_EXP_notebook_name": "RQ1.ipynb",
    "ML_EXP_training_end_time": "2025-05-04T11:18:40.550683",
    "ML_EXP_training_start_time": "2025-05-04T11:18:25.126215",
    "PROV-O_prov_Activity": "Ingestion and Publication",
    "PROV-O_prov_Agent_database_creator": "Reema George Dass",
    "PROV-O_prov_Agent_dataset_creator": "info not available",
    "PROV-O_prov_endedAtTime": "2025-04-23T20:42:29.501Z",
    "PROV-O_prov_Entity": "Iris",
    "PROV-O_prov_location": "http://localhost/api/database/c3a42d17-42b7-43c9-a504-2363fb4c9c8d",
    "PROV-O_prov_role_database_creator_role": "Database Ingestor and Maintainer",
    "PROV-O_prov_role_dataset_creator_role": "",
    "PROV-O_prov_startedAtTime": "info not available",
    "PROV-O_prov_used": "http://localhost/api/database/c3a42d17-42b7-43c9-a504-2363fb4c9c8d",
    "PROV-O_prov_wasAssociatedWith": "Reema George Dass",
    "PROV-O_prov_wasAttributedTo": "info not available",
    "PROV-O_prov_wasDerivedFrom": "info not available",
    "PROV-O_prov_wasGeneratedBy": "Reema George Dass",
    "PROV_startedAtTime": "2025-05-04T11:18:23.233963"
  },
  "ML_EXP_artifacts": [
    {
      "path": "GIT_commit_diff.json",
      "type": "text",
      "content": "{\n  \"GIT_previous_commit\": \"fbd10686b8bcaef7a97f77c641ad3c65a7779ee1\",\n  \"GIT_previous_commit_url\": \"https://github.com/reema-dass26/REPO/commit/fbd10686b8bcaef7a97f77c641ad3c65a7779ee1\",\n  \"GIT_current_commit_url\": \"https://github.com/reema-dass26/REPO/commit/8a9e8a669110657fe06304f57c9bbe7d099e5f81\",\n  \"GIT_current_commit\": \"8a9e8a669110657fe06304f57c9bbe7d099e5f81\",\n  \"GIT_diff\": \"diff --git a/.jupyter/desktop-workspaces/default-37a8.jupyterlab-workspace b/.jupyter/desktop-workspaces/default-37a8.jupyterlab-workspace\\nindex a4a0c51..aaabb37 100644\\n--- a/.jupyter/desktop-workspaces/default-37a8.jupyterlab-workspace\\n+++ b/.jupyter/desktop-workspaces/default-37a8.jupyterlab-workspace\\n@@ -1 +1 @@\\n-{\\\"data\\\":{\\\"file-browser-filebrowser:columns\\\":{\\\"sizes\\\":{\\\"name\\\":139.75000762939453,\\\"file_size\\\":null,\\\"is_selected\\\":18,\\\"last_modified\\\":86.58333587646484}},\\\"layout-restorer:data\\\":{\\\"main\\\":{\\\"dock\\\":{\\\"type\\\":\\\"tab-area\\\",\\\"currentIndex\\\":1,\\\"widgets\\\":[\\\"terminal:1\\\",\\\"notebook:notebooks/RQ_notebooks/RQ1_2_4.ipynb\\\",\\\"application-mimedocuments:notebooks/RQ_notebooks/MODEL_PROVENANCE/RandomForest_Iris_v20250425_125653/RandomForest_Iris_v20250425_125653_run_summary.json:JSON\\\",\\\"notebook:notebooks/RQ_notebooks/Untitled.ipynb\\\"]},\\\"current\\\":\\\"notebook:notebooks/RQ_notebooks/RQ1_2_4.ipynb\\\"},\\\"down\\\":{\\\"size\\\":0,\\\"widgets\\\":[]},\\\"left\\\":{\\\"collapsed\\\":false,\\\"visible\\\":true,\\\"current\\\":\\\"filebrowser\\\",\\\"widgets\\\":[\\\"filebrowser\\\",\\\"running-sessions\\\",\\\"git-sessions\\\",\\\"@jupyterlab/toc:plugin\\\",\\\"extensionmanager.main-view\\\"],\\\"widgetStates\\\":{\\\"jp-running-sessions\\\":{\\\"sizes\\\":[0.16666666666666666,0.16666666666666666,0.16666666666666666,0.16666666666666666,0.16666666666666666,0.16666666666666666],\\\"expansionStates\\\":[false,false,false,false,false,false]},\\\"extensionmanager.main-view\\\":{\\\"sizes\\\":[0,0.5,0.5],\\\"expansionStates\\\":[false,false,false]}}},\\\"right\\\":{\\\"collapsed\\\":true,\\\"visible\\\":true,\\\"widgets\\\":[\\\"jp-property-inspector\\\",\\\"debugger-sidebar\\\"],\\\"widgetStates\\\":{\\\"jp-debugger-sidebar\\\":{\\\"sizes\\\":[1,0,0,0,0],\\\"expansionStates\\\":[false,false,false,false,false]}}},\\\"relativeSizes\\\":[0.2228151111111111,0.7771848888888889,0],\\\"top\\\":{\\\"simpleVisibility\\\":true}},\\\"docmanager:recents\\\":{\\\"opened\\\":[{\\\"path\\\":\\\"notebooks/RQ_notebooks\\\",\\\"contentType\\\":\\\"directory\\\",\\\"root\\\":\\\"~/REPO\\\"},{\\\"path\\\":\\\"notebooks/RQ_notebooks/RQ1_2_4.ipynb\\\",\\\"contentType\\\":\\\"notebook\\\",\\\"factory\\\":\\\"Notebook\\\",\\\"root\\\":\\\"~/REPO\\\"},{\\\"path\\\":\\\"notebooks/RQ_notebooks/MODEL_PROVENANCE/RandomForest_Iris_v20250425_125653\\\",\\\"contentType\\\":\\\"directory\\\",\\\"root\\\":\\\"~/REPO\\\"},{\\\"path\\\":\\\"notebooks/RQ_notebooks/MODEL_PROVENANCE/RandomForest_Iris_v20250425_125653/RandomForest_Iris_v20250425_125653_run_summary.json\\\",\\\"contentType\\\":\\\"file\\\",\\\"factory\\\":\\\"JSON\\\",\\\"root\\\":\\\"~/REPO\\\"},{\\\"path\\\":\\\"notebooks/RQ_notebooks/MODEL_PROVENANCE/RandomForest_Iris_v20250425_121328\\\",\\\"contentType\\\":\\\"directory\\\",\\\"root\\\":\\\"~/REPO\\\"},{\\\"path\\\":\\\"notebooks/RQ_notebooks/MODEL_PROVENANCE/RandomForest_Iris_v20250425_121328/RandomForest_Iris_v20250425_121328_run_summary.json\\\",\\\"contentType\\\":\\\"file\\\",\\\"factory\\\":\\\"JSON\\\",\\\"root\\\":\\\"~/REPO\\\"},{\\\"path\\\":\\\"notebooks/RQ_notebooks/Untitled.ipynb\\\",\\\"contentType\\\":\\\"notebook\\\",\\\"factory\\\":\\\"Notebook\\\",\\\"root\\\":\\\"~/REPO\\\"},{\\\"path\\\":\\\"notebooks/RQ_notebooks/MODEL_PROVENANCE/RandomForest_Iris_v20250425_121328/Untitled.ipynb\\\",\\\"contentType\\\":\\\"notebook\\\",\\\"factory\\\":\\\"Notebook\\\",\\\"root\\\":\\\"~/REPO\\\"},{\\\"path\\\":\\\"notebooks/RQ_notebooks/MODEL_PROVENANCE/RandomForest_Iris_v20250425_121328/28f01e38b7f04d2f948fe21f57f41d0cRDFXML_viz.png\\\",\\\"contentType\\\":\\\"file\\\",\\\"factory\\\":\\\"Image\\\",\\\"root\\\":\\\"~/REPO\\\"},{\\\"path\\\":\\\"notebooks/RQ_notebooks/RQ4_draft.ipynb\\\",\\\"contentType\\\":\\\"notebook\\\",\\\"factory\\\":\\\"Notebook\\\",\\\"root\\\":\\\"~/REPO\\\"}],\\\"closed\\\":[{\\\"path\\\":\\\"notebooks/RQ_notebooks/MODEL_PROVENANCE/RandomForest_Iris_v20250425_121328/RandomForest_Iris_v20250425_121328_run_summary.json\\\",\\\"contentType\\\":\\\"file\\\",\\\"factory\\\":\\\"JSON\\\",\\\"root\\\":\\\"~/REPO\\\"},{\\\"path\\\":\\\"notebooks/RQ_notebooks/MODEL_PROVENANCE/RandomForest_Iris_v20250425_121328/Untitled.ipynb\\\",\\\"contentType\\\":\\\"notebook\\\",\\\"factory\\\":\\\"Notebook\\\",\\\"root\\\":\\\"~/REPO\\\"},{\\\"path\\\":\\\"notebooks/RQ_notebooks/MODEL_PROVENANCE/RandomForest_Iris_v20250425_135900/RandomForest_Iris_v20250425_135900_run_summary.json\\\",\\\"contentType\\\":\\\"file\\\",\\\"factory\\\":\\\"JSON\\\",\\\"root\\\":\\\"~/REPO\\\"},{\\\"path\\\":\\\"notebooks/RQ_notebooks/vizualization.py\\\",\\\"contentType\\\":\\\"file\\\",\\\"factory\\\":\\\"Editor\\\",\\\"root\\\":\\\"~/REPO\\\"},{\\\"path\\\":\\\"notebooks/RQ_notebooks/RQ4_draft.ipynb\\\",\\\"contentType\\\":\\\"notebook\\\",\\\"factory\\\":\\\"Notebook\\\",\\\"root\\\":\\\"~/REPO\\\"},{\\\"path\\\":\\\"notebooks/RQ_notebooks/MODEL_PROVENANCE/RandomForest_Iris_v20250425_121328/28f01e38b7f04d2f948fe21f57f41d0cRDFXML_viz.png\\\",\\\"contentType\\\":\\\"file\\\",\\\"factory\\\":\\\"Image\\\",\\\"root\\\":\\\"~/REPO\\\"},{\\\"path\\\":\\\"notebooks/RQ_notebooks/MODEL_PROVENANCE/RandomForest_Iris_v20250425_121328/RandomForest_Iris_v20250425_121328.jsonld\\\",\\\"contentType\\\":\\\"file\\\",\\\"factory\\\":\\\"Editor\\\",\\\"root\\\":\\\"~/REPO\\\"},{\\\"path\\\":\\\"notebooks/RQ_notebooks/rdf_outputs/RandomForest_Iris_v20250425_121328/28f01e38b7f04d2f948fe21f57f41d0c.xml\\\",\\\"contentType\\\":\\\"file\\\",\\\"factory\\\":\\\"Editor\\\",\\\"root\\\":\\\"~/REPO\\\"},{\\\"path\\\":\\\"notebooks/RQ_notebooks/MODEL_PROVENANCE/RandomForest_Iris_v20250425_125653/68d5dd35a5354061bf02395d2243b624RDFXML_viz.png\\\",\\\"contentType\\\":\\\"file\\\",\\\"factory\\\":\\\"Image\\\",\\\"root\\\":\\\"~/REPO\\\"},{\\\"path\\\":\\\"notebooks/RQ_notebooks/MODEL_PROVENANCE/RandomForest_Iris_v20250425_121328/28f01e38b7f04d2f948fe21f57f41d0c.xml\\\",\\\"contentType\\\":\\\"file\\\",\\\"factory\\\":\\\"Editor\\\",\\\"root\\\":\\\"~/REPO\\\"}]},\\\"file-browser-filebrowser:cwd\\\":{\\\"path\\\":\\\"notebooks/RQ_notebooks/MODEL_PROVENANCE/RandomForest_Iris_v20250425_125653\\\"},\\\"terminal:1\\\":{\\\"data\\\":{\\\"name\\\":\\\"1\\\"}},\\\"notebook:notebooks/RQ_notebooks/RQ1_2_4.ipynb\\\":{\\\"data\\\":{\\\"path\\\":\\\"notebooks/RQ_notebooks/RQ1_2_4.ipynb\\\",\\\"factory\\\":\\\"Notebook\\\"}},\\\"notebook:notebooks/RQ_notebooks/Untitled.ipynb\\\":{\\\"data\\\":{\\\"path\\\":\\\"notebooks/RQ_notebooks/Untitled.ipynb\\\",\\\"factory\\\":\\\"Notebook\\\"}},\\\"application-mimedocuments:notebooks/RQ_notebooks/MODEL_PROVENANCE/RandomForest_Iris_v20250425_125653/RandomForest_Iris_v20250425_125653_run_summary.json:JSON\\\":{\\\"data\\\":{\\\"path\\\":\\\"notebooks/RQ_notebooks/MODEL_PROVENANCE/RandomForest_Iris_v20250425_125653/RandomForest_Iris_v20250425_125653_run_summary.json\\\",\\\"factory\\\":\\\"JSON\\\"}}},\\\"metadata\\\":{\\\"id\\\":\\\"default\\\"}}\\n\\\\ No newline at end of file\\n+{\\\"data\\\":{\\\"file-browser-filebrowser:columns\\\":{\\\"sizes\\\":{\\\"name\\\":139.75000762939453,\\\"file_size\\\":null,\\\"is_selected\\\":18,\\\"last_modified\\\":86.58333587646484}},\\\"layout-restorer:data\\\":{\\\"main\\\":{\\\"dock\\\":{\\\"type\\\":\\\"tab-area\\\",\\\"currentIndex\\\":1,\\\"widgets\\\":[\\\"terminal:1\\\",\\\"notebook:notebooks/RQ_notebooks/RQ1_2_4.ipynb\\\",\\\"application-mimedocuments:notebooks/RQ_notebooks/MODEL_PROVENANCE/RandomForest_Iris_v20250503_230848/RandomForest_Iris_v20250503_230848_run_summary.json:JSON\\\"]},\\\"current\\\":\\\"notebook:notebooks/RQ_notebooks/RQ1_2_4.ipynb\\\"},\\\"down\\\":{\\\"size\\\":0,\\\"widgets\\\":[]},\\\"left\\\":{\\\"collapsed\\\":false,\\\"visible\\\":true,\\\"current\\\":\\\"filebrowser\\\",\\\"widgets\\\":[\\\"filebrowser\\\",\\\"running-sessions\\\",\\\"git-sessions\\\",\\\"@jupyterlab/toc:plugin\\\",\\\"extensionmanager.main-view\\\"],\\\"widgetStates\\\":{\\\"jp-running-sessions\\\":{\\\"sizes\\\":[0.16666666666666666,0.16666666666666666,0.16666666666666666,0.16666666666666666,0.16666666666666666,0.16666666666666666],\\\"expansionStates\\\":[false,false,false,false,false,false]},\\\"extensionmanager.main-view\\\":{\\\"sizes\\\":[0,0.5,0.5],\\\"expansionStates\\\":[false,false,false]}}},\\\"right\\\":{\\\"collapsed\\\":true,\\\"visible\\\":true,\\\"widgets\\\":[\\\"jp-property-inspector\\\",\\\"debugger-sidebar\\\"],\\\"widgetStates\\\":{\\\"jp-debugger-sidebar\\\":{\\\"sizes\\\":[1,0,0,0,0],\\\"expansionStates\\\":[false,false,false,false,false]}}},\\\"relativeSizes\\\":[0.15284573170731708,0.847154268292683,0],\\\"top\\\":{\\\"simpleVisibility\\\":true}},\\\"docmanager:recents\\\":{\\\"opened\\\":[{\\\"path\\\":\\\"notebooks/RQ_notebooks\\\",\\\"contentType\\\":\\\"directory\\\",\\\"root\\\":\\\"~/REPO\\\"},{\\\"path\\\":\\\"notebooks/RQ_notebooks/RQ1_2_4.ipynb\\\",\\\"contentType\\\":\\\"notebook\\\",\\\"factory\\\":\\\"Notebook\\\",\\\"root\\\":\\\"~/REPO\\\"},{\\\"path\\\":\\\"notebooks/RQ_notebooks/MODEL_PROVENANCE/RandomForest_Iris_v20250503_230848\\\",\\\"contentType\\\":\\\"directory\\\",\\\"root\\\":\\\"~/REPO\\\"},{\\\"path\\\":\\\"notebooks/RQ_notebooks/MODEL_PROVENANCE/RandomForest_Iris_v20250503_230848/RandomForest_Iris_v20250503_230848_run_summary.json\\\",\\\"contentType\\\":\\\"file\\\",\\\"factory\\\":\\\"JSON\\\",\\\"root\\\":\\\"~/REPO\\\"},{\\\"path\\\":\\\"notebooks/RQ_notebooks/MODEL_PROVENANCE/RandomForest_Iris_v20250503_230628\\\",\\\"contentType\\\":\\\"directory\\\",\\\"root\\\":\\\"~/REPO\\\"},{\\\"path\\\":\\\"notebooks/RQ_notebooks/MODEL_PROVENANCE/RandomForest_Iris_v20250503_230628/RandomForest_Iris_v20250503_230628_run_summary.json\\\",\\\"contentType\\\":\\\"file\\\",\\\"factory\\\":\\\"JSON\\\",\\\"root\\\":\\\"~/REPO\\\"},{\\\"path\\\":\\\"notebooks/RQ_notebooks/MODEL_PROVENANCE/RandomForest_Iris_v20250503_230405\\\",\\\"contentType\\\":\\\"directory\\\",\\\"root\\\":\\\"~/REPO\\\"},{\\\"path\\\":\\\"notebooks/RQ_notebooks/MODEL_PROVENANCE/RandomForest_Iris_v20250503_230405/RandomForest_Iris_v20250503_230405_run_summary.json\\\",\\\"contentType\\\":\\\"file\\\",\\\"factory\\\":\\\"JSON\\\",\\\"root\\\":\\\"~/REPO\\\"},{\\\"path\\\":\\\"notebooks/RQ_notebooks/MODEL_PROVENANCE/RandomForest_Iris_v20250503_222930\\\",\\\"contentType\\\":\\\"directory\\\",\\\"root\\\":\\\"~/REPO\\\"},{\\\"path\\\":\\\"notebooks/RQ_notebooks/MODEL_PROVENANCE/RandomForest_Iris_v20250503_222930/RandomForest_Iris_v20250503_222930_run_summary.json\\\",\\\"contentType\\\":\\\"file\\\",\\\"factory\\\":\\\"Editor\\\",\\\"root\\\":\\\"~/REPO\\\"}],\\\"closed\\\":[{\\\"path\\\":\\\"notebooks/RQ_notebooks/MODEL_PROVENANCE/RandomForest_Iris_v20250503_230848/RandomForest_Iris_v20250503_230848_run_summary.json\\\",\\\"contentType\\\":\\\"file\\\",\\\"factory\\\":\\\"JSON\\\",\\\"root\\\":\\\"~/REPO\\\"},{\\\"path\\\":\\\"notebooks/RQ_notebooks/MODEL_PROVENANCE/RandomForest_Iris_v20250503_230405/RandomForest_Iris_v20250503_230405_run_summary.json\\\",\\\"contentType\\\":\\\"file\\\",\\\"factory\\\":\\\"JSON\\\",\\\"root\\\":\\\"~/REPO\\\"},{\\\"path\\\":\\\"notebooks/RQ_notebooks/MODEL_PROVENANCE/RandomForest_Iris_v20250503_230628/RandomForest_Iris_v20250503_230628_run_summary.json\\\",\\\"contentType\\\":\\\"file\\\",\\\"factory\\\":\\\"JSON\\\",\\\"root\\\":\\\"~/REPO\\\"},{\\\"path\\\":\\\"notebooks/RQ_notebooks/MODEL_PROVENANCE/RandomForest_Iris_v20250503_222930/RandomForest_Iris_v20250503_222930_run_summary.json\\\",\\\"contentType\\\":\\\"file\\\",\\\"factory\\\":\\\"Editor\\\",\\\"root\\\":\\\"~/REPO\\\"},{\\\"path\\\":\\\"notebooks/RQ_notebooks/MODEL_PROVENANCE/RandomForest_Iris_v20250503_222538/RandomForest_Iris_v20250503_222538_run_summary.json\\\",\\\"contentType\\\":\\\"file\\\",\\\"factory\\\":\\\"JSON\\\",\\\"root\\\":\\\"~/REPO\\\"},{\\\"path\\\":\\\"notebooks/RQ_notebooks/MODEL_PROVENANCE/RandomForest_Iris_v20250425_125653/RandomForest_Iris_v20250425_125653_run_summary.json\\\",\\\"contentType\\\":\\\"file\\\",\\\"factory\\\":\\\"JSON\\\",\\\"root\\\":\\\"~/REPO\\\"},{\\\"path\\\":\\\"notebooks/RQ_notebooks/Untitled.ipynb\\\",\\\"contentType\\\":\\\"notebook\\\",\\\"factory\\\":\\\"Notebook\\\",\\\"root\\\":\\\"~/REPO\\\"},{\\\"path\\\":\\\"notebooks/RQ_notebooks/MODEL_PROVENANCE/RandomForest_Iris_v20250425_121328/RandomForest_Iris_v20250425_121328_run_summary.json\\\",\\\"contentType\\\":\\\"file\\\",\\\"factory\\\":\\\"JSON\\\",\\\"root\\\":\\\"~/REPO\\\"},{\\\"path\\\":\\\"notebooks/RQ_notebooks/MODEL_PROVENANCE/RandomForest_Iris_v20250425_121328/Untitled.ipynb\\\",\\\"contentType\\\":\\\"notebook\\\",\\\"factory\\\":\\\"Notebook\\\",\\\"root\\\":\\\"~/REPO\\\"},{\\\"path\\\":\\\"notebooks/RQ_notebooks/MODEL_PROVENANCE/RandomForest_Iris_v20250425_135900/RandomForest_Iris_v20250425_135900_run_summary.json\\\",\\\"contentType\\\":\\\"file\\\",\\\"factory\\\":\\\"JSON\\\",\\\"root\\\":\\\"~/REPO\\\"}]},\\\"file-browser-filebrowser:cwd\\\":{\\\"path\\\":\\\"notebooks/RQ_notebooks/MODEL_PROVENANCE\\\"},\\\"terminal:1\\\":{\\\"data\\\":{\\\"name\\\":\\\"1\\\"}},\\\"notebook:notebooks/RQ_notebooks/RQ1_2_4.ipynb\\\":{\\\"data\\\":{\\\"path\\\":\\\"notebooks/RQ_notebooks/RQ1_2_4.ipynb\\\",\\\"factory\\\":\\\"Notebook\\\"}},\\\"application-mimedocuments:notebooks/RQ_notebooks/MODEL_PROVENANCE/RandomForest_Iris_v20250503_230848/RandomForest_Iris_v20250503_230848_run_summary.json:JSON\\\":{\\\"data\\\":{\\\"path\\\":\\\"notebooks/RQ_notebooks/MODEL_PROVENANCE/RandomForest_Iris_v20250503_230848/RandomForest_Iris_v20250503_230848_run_summary.json\\\",\\\"factory\\\":\\\"JSON\\\"}}},\\\"metadata\\\":{\\\"id\\\":\\\"default\\\"}}\\n\\\\ No newline at end of file\\ndiff --git a/notebooks/RQ_notebooks/ML_EXP_plots/RandomForest_Iris_v20250504_111825/confusion_matrix.png b/notebooks/RQ_notebooks/ML_EXP_plots/RandomForest_Iris_v20250504_111825/confusion_matrix.png\\nnew file mode 100644\\nindex 0000000..5bf98dd\\nBinary files /dev/null and b/notebooks/RQ_notebooks/ML_EXP_plots/RandomForest_Iris_v20250504_111825/confusion_matrix.png differ\\ndiff --git a/notebooks/RQ_notebooks/ML_EXP_plots/RandomForest_Iris_v20250504_111825/feature_importances.png b/notebooks/RQ_notebooks/ML_EXP_plots/RandomForest_Iris_v20250504_111825/feature_importances.png\\nnew file mode 100644\\nindex 0000000..65481a2\\nBinary files /dev/null and b/notebooks/RQ_notebooks/ML_EXP_plots/RandomForest_Iris_v20250504_111825/feature_importances.png differ\\ndiff --git a/notebooks/RQ_notebooks/ML_EXP_plots/RandomForest_Iris_v20250504_111825/pr_curve_cls_0.png b/notebooks/RQ_notebooks/ML_EXP_plots/RandomForest_Iris_v20250504_111825/pr_curve_cls_0.png\\nnew file mode 100644\\nindex 0000000..a8d230a\\nBinary files /dev/null and b/notebooks/RQ_notebooks/ML_EXP_plots/RandomForest_Iris_v20250504_111825/pr_curve_cls_0.png differ\\ndiff --git a/notebooks/RQ_notebooks/ML_EXP_plots/RandomForest_Iris_v20250504_111825/pr_curve_cls_1.png b/notebooks/RQ_notebooks/ML_EXP_plots/RandomForest_Iris_v20250504_111825/pr_curve_cls_1.png\\nnew file mode 100644\\nindex 0000000..b36796e\\nBinary files /dev/null and b/notebooks/RQ_notebooks/ML_EXP_plots/RandomForest_Iris_v20250504_111825/pr_curve_cls_1.png differ\\ndiff --git a/notebooks/RQ_notebooks/ML_EXP_plots/RandomForest_Iris_v20250504_111825/pr_curve_cls_2.png b/notebooks/RQ_notebooks/ML_EXP_plots/RandomForest_Iris_v20250504_111825/pr_curve_cls_2.png\\nnew file mode 100644\\nindex 0000000..86bc90f\\nBinary files /dev/null and b/notebooks/RQ_notebooks/ML_EXP_plots/RandomForest_Iris_v20250504_111825/pr_curve_cls_2.png differ\\ndiff --git a/notebooks/RQ_notebooks/ML_EXP_plots/RandomForest_Iris_v20250504_111825/roc_curve_cls_0.png b/notebooks/RQ_notebooks/ML_EXP_plots/RandomForest_Iris_v20250504_111825/roc_curve_cls_0.png\\nnew file mode 100644\\nindex 0000000..5ae6a09\\nBinary files /dev/null and b/notebooks/RQ_notebooks/ML_EXP_plots/RandomForest_Iris_v20250504_111825/roc_curve_cls_0.png differ\\ndiff --git a/notebooks/RQ_notebooks/ML_EXP_plots/RandomForest_Iris_v20250504_111825/roc_curve_cls_1.png b/notebooks/RQ_notebooks/ML_EXP_plots/RandomForest_Iris_v20250504_111825/roc_curve_cls_1.png\\nnew file mode 100644\\nindex 0000000..7d3f039\\nBinary files /dev/null and b/notebooks/RQ_notebooks/ML_EXP_plots/RandomForest_Iris_v20250504_111825/roc_curve_cls_1.png differ\\ndiff --git a/notebooks/RQ_notebooks/ML_EXP_plots/RandomForest_Iris_v20250504_111825/roc_curve_cls_2.png b/notebooks/RQ_notebooks/ML_EXP_plots/RandomForest_Iris_v20250504_111825/roc_curve_cls_2.png\\nnew file mode 100644\\nindex 0000000..24b4468\\nBinary files /dev/null and b/notebooks/RQ_notebooks/ML_EXP_plots/RandomForest_Iris_v20250504_111825/roc_curve_cls_2.png differ\\ndiff --git a/notebooks/RQ_notebooks/ML_EXP_plots/RandomForest_Iris_v20250504_111825/shap_summary.png b/notebooks/RQ_notebooks/ML_EXP_plots/RandomForest_Iris_v20250504_111825/shap_summary.png\\nnew file mode 100644\\nindex 0000000..24fe1a7\\nBinary files /dev/null and b/notebooks/RQ_notebooks/ML_EXP_plots/RandomForest_Iris_v20250504_111825/shap_summary.png differ\\ndiff --git a/notebooks/RQ_notebooks/RQ1_2_4.ipynb b/notebooks/RQ_notebooks/RQ1_2_4.ipynb\\nindex 1f21b7e..091dcfa 100644\\n--- a/notebooks/RQ_notebooks/RQ1_2_4.ipynb\\n+++ b/notebooks/RQ_notebooks/RQ1_2_4.ipynb\\n@@ -645,11 +645,33 @@\\n   },\\n   {\\n    \\\"cell_type\\\": \\\"code\\\",\\n-   \\\"execution_count\\\": null,\\n+   \\\"execution_count\\\": 168,\\n    \\\"id\\\": \\\"aab28b04-4db7-43bf-8320-f6382120984a\\\",\\n    \\\"metadata\\\": {},\\n    \\\"outputs\\\": [],\\n-   \\\"source\\\": []\\n+   \\\"source\\\": [\\n+    \\\"def log_categorized_fields_to_mlflow(categorized_fields: dict):\\\\n\\\",\\n+    \\\"    def safe_tag(key, value):\\\\n\\\",\\n+    \\\"        # MLflow-safe keys (no colons or invalid characters)\\\\n\\\",\\n+    \\\"        key_clean = key.replace(\\\\\\\":\\\\\\\", \\\\\\\"_\\\\\\\").replace(\\\\\\\"/\\\\\\\", \\\\\\\"_\\\\\\\").replace(\\\\\\\" \\\\\\\", \\\\\\\"_\\\\\\\")\\\\n\\\",\\n+    \\\"        try:\\\\n\\\",\\n+    \\\"            mlflow.set_tag(key_clean, json.dumps(value) if isinstance(value, (dict, list)) else str(value))\\\\n\\\",\\n+    \\\"        except Exception as e:\\\\n\\\",\\n+    \\\"            print(f\\\\\\\"[\\u26a0\\ufe0f Tag error] {key_clean}: {e}\\\\\\\")\\\\n\\\",\\n+    \\\"\\\\n\\\",\\n+    \\\"    for section, fields in categorized_fields.items():\\\\n\\\",\\n+    \\\"        if isinstance(fields, dict):\\\\n\\\",\\n+    \\\"            for key, value in fields.items():\\\\n\\\",\\n+    \\\"                if isinstance(value, dict):  # e.g. nested like prov:Agent\\\\n\\\",\\n+    \\\"                    for subkey, subval in value.items():\\\\n\\\",\\n+    \\\"                        full_key = f\\\\\\\"{section}_{key}_{subkey}\\\\\\\"\\\\n\\\",\\n+    \\\"                        safe_tag(full_key, subval)\\\\n\\\",\\n+    \\\"                else:\\\\n\\\",\\n+    \\\"                    full_key = f\\\\\\\"{section}_{key}\\\\\\\"\\\\n\\\",\\n+    \\\"                    safe_tag(full_key, value)\\\\n\\\",\\n+    \\\"        else:\\\\n\\\",\\n+    \\\"            print(f\\\\\\\"[\\u26a0\\ufe0f Skip] {section} \\u2192 Not a dict: {fields}\\\\\\\")\\\\n\\\"\\n+   ]\\n   },\\n   {\\n    \\\"cell_type\\\": \\\"markdown\\\",\\n@@ -829,7 +851,7 @@\\n   },\\n   {\\n    \\\"cell_type\\\": \\\"code\\\",\\n-   \\\"execution_count\\\": 45,\\n+   \\\"execution_count\\\": 163,\\n    \\\"id\\\": \\\"838dd233-25dc-4725-974d-4da89c257782\\\",\\n    \\\"metadata\\\": {},\\n    \\\"outputs\\\": [],\\n@@ -852,7 +874,7 @@\\n   },\\n   {\\n    \\\"cell_type\\\": \\\"code\\\",\\n-   \\\"execution_count\\\": 46,\\n+   \\\"execution_count\\\": 180,\\n    \\\"id\\\": \\\"9668451f-4352-4bdc-8b6b-bbe49074212a\\\",\\n    \\\"metadata\\\": {},\\n    \\\"outputs\\\": [\\n@@ -860,8 +882,8 @@\\n      \\\"name\\\": \\\"stderr\\\",\\n      \\\"output_type\\\": \\\"stream\\\",\\n      \\\"text\\\": [\\n-      \\\"2025/04/25 11:57:54 INFO mlflow.tracking.fluent: Autologging successfully enabled for sklearn.\\\\n\\\",\\n-      \\\"2025/04/25 11:57:54 INFO mlflow.tracking.fluent: Autologging successfully enabled for statsmodels.\\\\n\\\"\\n+      \\\"2025/05/04 11:14:19 INFO mlflow.tracking.fluent: Autologging successfully enabled for sklearn.\\\\n\\\",\\n+      \\\"2025/05/04 11:14:19 INFO mlflow.tracking.fluent: Autologging successfully enabled for statsmodels.\\\\n\\\"\\n      ]\\n     }\\n    ],\\n@@ -888,7 +910,7 @@\\n   },\\n   {\\n    \\\"cell_type\\\": \\\"code\\\",\\n-   \\\"execution_count\\\": 157,\\n+   \\\"execution_count\\\": 181,\\n    \\\"id\\\": \\\"2b608670-96a5-42b0-b69b-263ac1e452eb\\\",\\n    \\\"metadata\\\": {},\\n    \\\"outputs\\\": [],\\n@@ -914,36 +936,36 @@\\n     \\\"    run_data=None\\\\n\\\",\\n     \\\"):\\\\n\\\",\\n     \\\"    # ========== FAIR4ML (model-related only) ==========\\\\n\\\",\\n-    \\\"    mlflow.set_tag(\\\\\\\"fair4ml.intendedUse\\\\\\\", \\\\\\\"Multiclass classification using RandomForest\\\\\\\")\\\\n\\\",\\n-    \\\"    mlflow.set_tag(\\\\\\\"fair4ml.fineTunedFrom\\\\\\\", model_name if \\\\\\\"fine-tuned\\\\\\\" in model_name.lower() else \\\\\\\"None\\\\\\\")\\\\n\\\",\\n-    \\\"    mlflow.set_tag(\\\\\\\"fair4ml.usageInstructions\\\\\\\", \\\\\\\"Call `.predict()` on a feature-aligned DataFrame\\\\\\\")\\\\n\\\",\\n-    \\\"    mlflow.set_tag(\\\\\\\"fair4ml.ethicalLegalSocial\\\\\\\", \\\\\\\"No ethical risks; trained on open dataset\\\\\\\")\\\\n\\\",\\n-    \\\"    mlflow.set_tag(\\\\\\\"fair4ml.modelRisks\\\\\\\", \\\\\\\"May misclassify overlapping species\\\\\\\")\\\\n\\\",\\n-    \\\"    mlflow.set_tag(\\\\\\\"fair4ml.hasCO2eEmissions\\\\\\\", \\\\\\\"Low; trained locally on a small dataset\\\\\\\")\\\\n\\\",\\n-    \\\"    mlflow.set_tag(\\\\\\\"fair4ml.sharedBy\\\\\\\", \\\\\\\"Your Name or Organization\\\\\\\")\\\\n\\\",\\n-    \\\"    mlflow.set_tag(\\\\\\\"fair4ml.serializationFormat\\\\\\\", \\\\\\\"pickle\\\\\\\")\\\\n\\\",\\n+    \\\"    mlflow.set_tag(\\\\\\\"FAIR4ML_intendedUse\\\\\\\", \\\\\\\"Multiclass classification using RandomForest\\\\\\\")\\\\n\\\",\\n+    \\\"    mlflow.set_tag(\\\\\\\"FAIR4ML_fineTunedFrom\\\\\\\", model_name if \\\\\\\"fine-tuned\\\\\\\" in model_name.lower() else \\\\\\\"None\\\\\\\")\\\\n\\\",\\n+    \\\"    mlflow.set_tag(\\\\\\\"FAIR4ML_usageInstructions\\\\\\\", \\\\\\\"Call `.predict()` on a feature-aligned DataFrame\\\\\\\")\\\\n\\\",\\n+    \\\"    mlflow.set_tag(\\\\\\\"FAIR4ML_ethicalLegalSocial\\\\\\\", \\\\\\\"No ethical risks; trained on open dataset\\\\\\\")\\\\n\\\",\\n+    \\\"    mlflow.set_tag(\\\\\\\"FAIR4ML_modelRisks\\\\\\\", \\\\\\\"May misclassify overlapping species\\\\\\\")\\\\n\\\",\\n+    \\\"    mlflow.set_tag(\\\\\\\"FAIR4ML_hasCO2eEmissions\\\\\\\", \\\\\\\"Low; trained locally on a small dataset\\\\\\\")\\\\n\\\",\\n+    \\\"    mlflow.set_tag(\\\\\\\"FAIR4ML_sharedBy\\\\\\\", \\\\\\\"Your Name or Organization\\\\\\\")\\\\n\\\",\\n+    \\\"    mlflow.set_tag(\\\\\\\"FAIR4ML_serializationFormat\\\\\\\", \\\\\\\"pickle\\\\\\\")\\\\n\\\",\\n     \\\"\\\\n\\\",\\n     \\\"    # ========== Croissant structure (minimal) ==========\\\\n\\\",\\n-    \\\"    mlflow.set_tag(\\\\\\\"cr.RecordSet\\\\\\\", \\\\\\\"Feature vectors for model training\\\\\\\")\\\\n\\\",\\n-    \\\"    mlflow.set_tag(\\\\\\\"cr.Field\\\\\\\", \\\\\\\"Input features used for training\\\\\\\")\\\\n\\\",\\n-    \\\"    mlflow.set_tag(\\\\\\\"cr.encodingFormat\\\\\\\", \\\\\\\"text/csv\\\\\\\")\\\\n\\\",\\n+    \\\"    mlflow.set_tag(\\\\\\\"CR_RecordSet\\\\\\\", \\\\\\\"Feature vectors for model training\\\\\\\")\\\\n\\\",\\n+    \\\"    mlflow.set_tag(\\\\\\\"CR_Field\\\\\\\", \\\\\\\"Input features used for training\\\\\\\")\\\\n\\\",\\n+    \\\"    mlflow.set_tag(\\\\\\\"CR_encodingFormat\\\\\\\", \\\\\\\"text/csv\\\\\\\")\\\\n\\\",\\n     \\\"\\\\n\\\",\\n     \\\"    # ========== MLSEA ==========\\\\n\\\",\\n-    \\\"    mlflow.set_tag(\\\\\\\"mlsea.experimentId\\\\\\\", run_id)\\\\n\\\",\\n-    \\\"    mlflow.set_tag(\\\\\\\"mlsea.modelArchitecture\\\\\\\", model.__class__.__name__)\\\\n\\\",\\n-    \\\"    mlflow.set_tag(\\\\\\\"mlsea.hyperparameters\\\\\\\", json.dumps(hyperparams))\\\\n\\\",\\n-    \\\"    mlflow.set_tag(\\\\\\\"mlsea.trainingProcedure\\\\\\\", f\\\\\\\"train_test_split with test_size={test_size}, random_state={random_state}\\\\\\\")\\\\n\\\",\\n-    \\\"    mlflow.set_tag(\\\\\\\"mlsea.evaluationMetrics\\\\\\\", json.dumps({\\\\n\\\",\\n+    \\\"    mlflow.set_tag(\\\\\\\"MLSEA_experimentId\\\\\\\", run_id)\\\\n\\\",\\n+    \\\"    mlflow.set_tag(\\\\\\\"MLSEA_modelArchitecture\\\\\\\", model.__class__.__name__)\\\\n\\\",\\n+    \\\"    mlflow.set_tag(\\\\\\\"MLSEA_hyperparameters\\\\\\\", json.dumps(hyperparams))\\\\n\\\",\\n+    \\\"    mlflow.set_tag(\\\\\\\"MLSEA_trainingProcedure\\\\\\\", f\\\\\\\"train_test_split with test_size={test_size}, random_state={random_state}\\\\\\\")\\\\n\\\",\\n+    \\\"    mlflow.set_tag(\\\\\\\"MLSEA_evaluationMetrics\\\\\\\", json.dumps({\\\\n\\\",\\n     \\\"        \\\\\\\"accuracy\\\\\\\": acc,\\\\n\\\",\\n     \\\"        \\\\\\\"precision_macro\\\\\\\": prec,\\\\n\\\",\\n     \\\"        \\\\\\\"recall_macro\\\\\\\": rec,\\\\n\\\",\\n     \\\"        \\\\\\\"f1_macro\\\\\\\": f1,\\\\n\\\",\\n     \\\"        \\\\\\\"roc_auc\\\\\\\": auc\\\\n\\\",\\n     \\\"    }))\\\\n\\\",\\n-    \\\"    mlflow.set_tag(\\\\\\\"mlsea.dataPreprocessing\\\\\\\", json.dumps({\\\\n\\\",\\n+    \\\"    mlflow.set_tag(\\\\\\\"MLSEA_dataPreprocessing\\\\\\\", json.dumps({\\\\n\\\",\\n     \\\"        \\\\\\\"label_encoding\\\\\\\": label_map\\\\n\\\",\\n     \\\"    }))\\\\n\\\",\\n-    \\\"    mlflow.set_tag(\\\\\\\"mlsea.modelPath\\\\\\\", f\\\\\\\"{model_name}.pkl\\\\\\\")\\\\n\\\",\\n+    \\\"    mlflow.set_tag(\\\\\\\"MLSEA_modelPath\\\\\\\", f\\\\\\\"{model_name}.pkl\\\\\\\")\\\\n\\\",\\n     \\\"\\\\n\\\",\\n     \\\"    # Git commit hash (optional, safe fallback)\\\\n\\\",\\n     \\\"    try:\\\\n\\\",\\n@@ -951,10 +973,10 @@\\n     \\\"        sha = check_output([\\\\\\\"git\\\\\\\", \\\\\\\"rev-parse\\\\\\\", \\\\\\\"HEAD\\\\\\\"], text=True).strip()\\\\n\\\",\\n     \\\"    except Exception:\\\\n\\\",\\n     \\\"        sha = \\\\\\\"unknown\\\\\\\"\\\\n\\\",\\n-    \\\"    mlflow.set_tag(\\\\\\\"mlsea.trainingCodeSnapshot\\\\\\\", sha)\\\\n\\\",\\n+    \\\"    mlflow.set_tag(\\\\\\\"MLSEA_trainingCodeSnapshot\\\\\\\", sha)\\\\n\\\",\\n     \\\"\\\\n\\\",\\n-    \\\"    mlflow.set_tag(\\\\\\\"mlsea.previousModelRunId\\\\\\\", \\\\\\\"None\\\\\\\")\\\\n\\\",\\n-    \\\"    mlflow.set_tag(\\\\\\\"mlsea.improvedFrom\\\\\\\", \\\\\\\"baseline_randomforest_2024\\\\\\\")\\\\n\\\",\\n+    \\\"    mlflow.set_tag(\\\\\\\"MLSEA_previousModelRunId\\\\\\\", \\\\\\\"None\\\\\\\")\\\\n\\\",\\n+    \\\"    mlflow.set_tag(\\\\\\\"MLSEA_improvedFrom\\\\\\\", \\\\\\\"baseline_randomforest_2024\\\\\\\")\\\\n\\\",\\n     \\\"\\\\n\\\",\\n     \\\"    # Compute environment\\\\n\\\",\\n     \\\"    compute_env = {\\\\n\\\",\\n@@ -966,9 +988,9 @@\\n     \\\"        \\\\\\\"pandas_version\\\\\\\": pd.__version__,\\\\n\\\",\\n     \\\"        \\\\\\\"numpy_version\\\\\\\": np.__version__,\\\\n\\\",\\n     \\\"    }\\\\n\\\",\\n-    \\\"    mlflow.set_tag(\\\\\\\"mlsea.computeEnvironment\\\\\\\", json.dumps(compute_env))\\\\n\\\",\\n+    \\\"    mlflow.set_tag(\\\\\\\"MLSEA_computeEnvironment\\\\\\\", json.dumps(compute_env))\\\\n\\\",\\n     \\\"\\\\n\\\",\\n-    \\\"    mlflow.set_tag(\\\\\\\"mlsea.performanceInterpretation\\\\\\\", (\\\\n\\\",\\n+    \\\"    mlflow.set_tag(\\\\\\\"MLSEA_performanceInterpretation\\\\\\\", (\\\\n\\\",\\n     \\\"        \\\\\\\"Model performs well with F1 macro > 0.90. \\\\\\\"\\\\n\\\",\\n     \\\"        \\\\\\\"ROC AUC confirms balanced performance across all classes.\\\\\\\"\\\\n\\\",\\n     \\\"    ))\\\\n\\\",\\n@@ -977,14 +999,14 @@\\n     \\\"    if run_data is not None:\\\\n\\\",\\n     \\\"        for key, val in run_data.tags.items():\\\\n\\\",\\n     \\\"            if key.startswith(\\\\\\\"justification_\\\\\\\"):\\\\n\\\",\\n-    \\\"                new_key = \\\\\\\"mlsea.justification_\\\\\\\" + key.replace(\\\\\\\"justification_\\\\\\\", \\\\\\\"\\\\\\\")\\\\n\\\",\\n+    \\\"                new_key = \\\\\\\"MLSEA_justification_\\\\\\\" + key.replace(\\\\\\\"justification_\\\\\\\", \\\\\\\"\\\\\\\")\\\\n\\\",\\n     \\\"                mlflow.set_tag(new_key, val)\\\\n\\\",\\n     \\\"\\\\n\\\"\\n    ]\\n   },\\n   {\\n    \\\"cell_type\\\": \\\"code\\\",\\n-   \\\"execution_count\\\": 158,\\n+   \\\"execution_count\\\": 182,\\n    \\\"id\\\": \\\"b04861da-f69b-4b73-b237-b79d340c59c1\\\",\\n    \\\"metadata\\\": {},\\n    \\\"outputs\\\": [],\\n@@ -1004,7 +1026,7 @@\\n   },\\n   {\\n    \\\"cell_type\\\": \\\"code\\\",\\n-   \\\"execution_count\\\": 159,\\n+   \\\"execution_count\\\": 179,\\n    \\\"id\\\": \\\"14c62f08-a116-4060-9689-f69968e9f240\\\",\\n    \\\"metadata\\\": {\\n     \\\"editable\\\": true,\\n@@ -1324,7 +1346,7 @@\\n      \\\"text\\\": [\\n       \\\"[Parallel(n_jobs=-1)]: Using backend ThreadingBackend with 12 concurrent workers.\\\\n\\\",\\n       \\\"[Parallel(n_jobs=-1)]: Done  26 tasks      | elapsed:    0.0s\\\\n\\\",\\n-      \\\"[Parallel(n_jobs=-1)]: Done 176 tasks      | elapsed:    0.2s\\\\n\\\",\\n+      \\\"[Parallel(n_jobs=-1)]: Done 176 tasks      | elapsed:    0.3s\\\\n\\\",\\n       \\\"[Parallel(n_jobs=-1)]: Done 200 out of 200 | elapsed:    0.3s finished\\\\n\\\",\\n       \\\"[Parallel(n_jobs=12)]: Using backend ThreadingBackend with 12 concurrent workers.\\\\n\\\",\\n       \\\"[Parallel(n_jobs=12)]: Done  26 tasks      | elapsed:    0.0s\\\\n\\\",\\n@@ -1334,6 +1356,50 @@\\n       \\\"[Parallel(n_jobs=12)]: Done  26 tasks      | elapsed:    0.0s\\\\n\\\",\\n       \\\"[Parallel(n_jobs=12)]: Done 176 tasks      | elapsed:    0.0s\\\\n\\\",\\n       \\\"[Parallel(n_jobs=12)]: Done 200 out of 200 | elapsed:    0.0s finished\\\\n\\\",\\n+      \\\"[Parallel(n_jobs=12)]: Using backend ThreadingBackend with 12 concurrent workers.\\\\n\\\",\\n+      \\\"[Parallel(n_jobs=12)]: Done  26 tasks      | elapsed:    0.0s\\\\n\\\",\\n+      \\\"[Parallel(n_jobs=12)]: Done 176 tasks      | elapsed:    0.0s\\\\n\\\",\\n+      \\\"[Parallel(n_jobs=12)]: Done 200 out of 200 | elapsed:    0.0s finished\\\\n\\\",\\n+      \\\"[Parallel(n_jobs=12)]: Using backend ThreadingBackend with 12 concurrent workers.\\\\n\\\",\\n+      \\\"[Parallel(n_jobs=12)]: Done  26 tasks      | elapsed:    0.0s\\\\n\\\",\\n+      \\\"[Parallel(n_jobs=12)]: Done 176 tasks      | elapsed:    0.0s\\\\n\\\",\\n+      \\\"[Parallel(n_jobs=12)]: Done 200 out of 200 | elapsed:    0.0s finished\\\\n\\\",\\n+      \\\"[Parallel(n_jobs=12)]: Using backend ThreadingBackend with 12 concurrent workers.\\\\n\\\",\\n+      \\\"[Parallel(n_jobs=12)]: Done  26 tasks      | elapsed:    0.0s\\\\n\\\",\\n+      \\\"[Parallel(n_jobs=12)]: Done 176 tasks      | elapsed:    0.0s\\\\n\\\",\\n+      \\\"[Parallel(n_jobs=12)]: Done 200 out of 200 | elapsed:    0.0s finished\\\\n\\\"\\n+     ]\\n+    },\\n+    {\\n+     \\\"data\\\": {\\n+      \\\"application/vnd.jupyter.widget-view+json\\\": {\\n+       \\\"model_id\\\": \\\"73c05cea1edb473ca139226daaee214d\\\",\\n+       \\\"version_major\\\": 2,\\n+       \\\"version_minor\\\": 0\\n+      },\\n+      \\\"text/plain\\\": [\\n+       \\\"Downloading artifacts:   0%|          | 0/7 [00:00<?, ?it/s]\\\"\\n+      ]\\n+     },\\n+     \\\"metadata\\\": {},\\n+     \\\"output_type\\\": \\\"display_data\\\"\\n+    },\\n+    {\\n+     \\\"name\\\": \\\"stderr\\\",\\n+     \\\"output_type\\\": \\\"stream\\\",\\n+     \\\"text\\\": [\\n+      \\\"[Parallel(n_jobs=12)]: Using backend ThreadingBackend with 12 concurrent workers.\\\\n\\\",\\n+      \\\"[Parallel(n_jobs=12)]: Done  26 tasks      | elapsed:    0.0s\\\\n\\\",\\n+      \\\"[Parallel(n_jobs=12)]: Done 176 tasks      | elapsed:    0.0s\\\\n\\\",\\n+      \\\"[Parallel(n_jobs=12)]: Done 200 out of 200 | elapsed:    0.0s finished\\\\n\\\",\\n+      \\\"[Parallel(n_jobs=12)]: Using backend ThreadingBackend with 12 concurrent workers.\\\\n\\\",\\n+      \\\"[Parallel(n_jobs=12)]: Done  26 tasks      | elapsed:    0.0s\\\\n\\\",\\n+      \\\"[Parallel(n_jobs=12)]: Done 176 tasks      | elapsed:    0.0s\\\\n\\\",\\n+      \\\"[Parallel(n_jobs=12)]: Done 200 out of 200 | elapsed:    0.0s finished\\\\n\\\",\\n+      \\\"[Parallel(n_jobs=12)]: Using backend ThreadingBackend with 12 concurrent workers.\\\\n\\\",\\n+      \\\"[Parallel(n_jobs=12)]: Done  26 tasks      | elapsed:    0.0s\\\\n\\\",\\n+      \\\"[Parallel(n_jobs=12)]: Done 176 tasks      | elapsed:    0.0s\\\\n\\\",\\n+      \\\"[Parallel(n_jobs=12)]: Done 200 out of 200 | elapsed:    0.0s finished\\\\n\\\",\\n       \\\"C:\\\\\\\\Users\\\\\\\\reema\\\\\\\\anaconda3\\\\\\\\Lib\\\\\\\\site-packages\\\\\\\\shap\\\\\\\\plots\\\\\\\\_beeswarm.py:1153: UserWarning: The figure layout has changed to tight\\\\n\\\",\\n       \\\"  pl.tight_layout()\\\\n\\\",\\n       \\\"C:\\\\\\\\Users\\\\\\\\reema\\\\\\\\anaconda3\\\\\\\\Lib\\\\\\\\site-packages\\\\\\\\shap\\\\\\\\plots\\\\\\\\_beeswarm.py:761: UserWarning: The figure layout has changed to tight\\\\n\\\",\\n@@ -1341,20 +1407,11 @@\\n      ]\\n     },\\n     {\\n-     \\\"ename\\\": \\\"MlflowException\\\",\\n-     \\\"evalue\\\": \\\"Invalid value \\\\\\\"mlsea.justification:bootstrap\\\\\\\" for parameter 'key' supplied: Names may only contain alphanumerics, underscores (_), dashes (-), periods (.), spaces ( ) and slashes (/).\\\",\\n-     \\\"output_type\\\": \\\"error\\\",\\n-     \\\"traceback\\\": [\\n-      \\\"\\\\u001b[1;31m---------------------------------------------------------------------------\\\\u001b[0m\\\",\\n-      \\\"\\\\u001b[1;31mMlflowException\\\\u001b[0m                           Traceback (most recent call last)\\\",\\n-      \\\"Cell \\\\u001b[1;32mIn[159], line 292\\\\u001b[0m\\\\n\\\\u001b[0;32m    289\\\\u001b[0m client \\\\u001b[38;5;241m=\\\\u001b[39m MlflowClient()\\\\n\\\\u001b[0;32m    290\\\\u001b[0m run_data \\\\u001b[38;5;241m=\\\\u001b[39m client\\\\u001b[38;5;241m.\\\\u001b[39mget_run(run\\\\u001b[38;5;241m.\\\\u001b[39minfo\\\\u001b[38;5;241m.\\\\u001b[39mrun_id)\\\\u001b[38;5;241m.\\\\u001b[39mdata\\\\n\\\\u001b[1;32m--> 292\\\\u001b[0m \\\\u001b[43mlog_standard_metadata\\\\u001b[49m\\\\u001b[43m(\\\\u001b[49m\\\\n\\\\u001b[0;32m    293\\\\u001b[0m \\\\u001b[43m\\\\u001b[49m\\\\u001b[43mmodel_name\\\\u001b[49m\\\\u001b[38;5;241;43m=\\\\u001b[39;49m\\\\u001b[43mmodel_name\\\\u001b[49m\\\\u001b[43m,\\\\u001b[49m\\\\n\\\\u001b[0;32m    294\\\\u001b[0m \\\\u001b[43m\\\\u001b[49m\\\\u001b[43mmodel\\\\u001b[49m\\\\u001b[38;5;241;43m=\\\\u001b[39;49m\\\\u001b[43mmodel\\\\u001b[49m\\\\u001b[43m,\\\\u001b[49m\\\\n\\\\u001b[0;32m    295\\\\u001b[0m \\\\u001b[43m\\\\u001b[49m\\\\u001b[43mhyperparams\\\\u001b[49m\\\\u001b[38;5;241;43m=\\\\u001b[39;49m\\\\u001b[43mhyperparams\\\\u001b[49m\\\\u001b[43m,\\\\u001b[49m\\\\n\\\\u001b[0;32m    296\\\\u001b[0m \\\\u001b[43m\\\\u001b[49m\\\\u001b[43macc\\\\u001b[49m\\\\u001b[38;5;241;43m=\\\\u001b[39;49m\\\\u001b[43macc\\\\u001b[49m\\\\u001b[43m,\\\\u001b[49m\\\\n\\\\u001b[0;32m    297\\\\u001b[0m \\\\u001b[43m\\\\u001b[49m\\\\u001b[43mprec\\\\u001b[49m\\\\u001b[38;5;241;43m=\\\\u001b[39;49m\\\\u001b[43mprec\\\\u001b[49m\\\\u001b[43m,\\\\u001b[49m\\\\n\\\\u001b[0;32m    298\\\\u001b[0m \\\\u001b[43m\\\\u001b[49m\\\\u001b[43mrec\\\\u001b[49m\\\\u001b[38;5;241;43m=\\\\u001b[39;49m\\\\u001b[43mrec\\\\u001b[49m\\\\u001b[43m,\\\\u001b[49m\\\\n\\\\u001b[0;32m    299\\\\u001b[0m \\\\u001b[43m\\\\u001b[49m\\\\u001b[43mf1\\\\u001b[49m\\\\u001b[38;5;241;43m=\\\\u001b[39;49m\\\\u001b[43mf1\\\\u001b[49m\\\\u001b[43m,\\\\u001b[49m\\\\n\\\\u001b[0;32m    300\\\\u001b[0m \\\\u001b[43m\\\\u001b[49m\\\\u001b[43mauc\\\\u001b[49m\\\\u001b[38;5;241;43m=\\\\u001b[39;49m\\\\u001b[43mauc\\\\u001b[49m\\\\u001b[43m,\\\\u001b[49m\\\\n\\\\u001b[0;32m    301\\\\u001b[0m \\\\u001b[43m\\\\u001b[49m\\\\u001b[43mlabel_map\\\\u001b[49m\\\\u001b[38;5;241;43m=\\\\u001b[39;49m\\\\u001b[43mlabel_map\\\\u001b[49m\\\\u001b[43m,\\\\u001b[49m\\\\n\\\\u001b[0;32m    302\\\\u001b[0m \\\\u001b[43m\\\\u001b[49m\\\\u001b[43mrun_id\\\\u001b[49m\\\\u001b[38;5;241;43m=\\\\u001b[39;49m\\\\u001b[43mrun\\\\u001b[49m\\\\u001b[38;5;241;43m.\\\\u001b[39;49m\\\\u001b[43minfo\\\\u001b[49m\\\\u001b[38;5;241;43m.\\\\u001b[39;49m\\\\u001b[43mrun_id\\\\u001b[49m\\\\u001b[43m,\\\\u001b[49m\\\\n\\\\u001b[0;32m    303\\\\u001b[0m \\\\u001b[43m\\\\u001b[49m\\\\u001b[43mtest_size\\\\u001b[49m\\\\u001b[38;5;241;43m=\\\\u001b[39;49m\\\\u001b[43mtest_size\\\\u001b[49m\\\\u001b[43m,\\\\u001b[49m\\\\n\\\\u001b[0;32m    304\\\\u001b[0m \\\\u001b[43m\\\\u001b[49m\\\\u001b[43mrandom_state\\\\u001b[49m\\\\u001b[38;5;241;43m=\\\\u001b[39;49m\\\\u001b[43mrandom_state\\\\u001b[49m\\\\u001b[43m,\\\\u001b[49m\\\\n\\\\u001b[0;32m    305\\\\u001b[0m \\\\u001b[43m\\\\u001b[49m\\\\u001b[43mrun_data\\\\u001b[49m\\\\u001b[38;5;241;43m=\\\\u001b[39;49m\\\\u001b[43mrun_data\\\\u001b[49m\\\\u001b[43m \\\\u001b[49m\\\\u001b[38;5;66;43;03m# captured via client.get_run(run.info.run_id).data\\\\u001b[39;49;00m\\\\n\\\\u001b[0;32m    306\\\\u001b[0m \\\\u001b[43m\\\\u001b[49m\\\\u001b[43m)\\\\u001b[49m\\\\n\\\\u001b[0;32m    307\\\\u001b[0m \\\\u001b[38;5;66;03m# \\u2500\\u2500\\u2500 1) Build a .pkl filename (you can include your model_name for clarity)\\\\u001b[39;00m\\\\n\\\\u001b[0;32m    308\\\\u001b[0m pkl_path \\\\u001b[38;5;241m=\\\\u001b[39m \\\\u001b[38;5;124mf\\\\u001b[39m\\\\u001b[38;5;124m\\\\\\\"\\\\u001b[39m\\\\u001b[38;5;124mTrained_models/\\\\u001b[39m\\\\u001b[38;5;132;01m{\\\\u001b[39;00mmodel_name\\\\u001b[38;5;132;01m}\\\\u001b[39;00m\\\\u001b[38;5;124m.pkl\\\\u001b[39m\\\\u001b[38;5;124m\\\\\\\"\\\\u001b[39m\\\\n\\\",\\n-      \\\"Cell \\\\u001b[1;32mIn[157], line 85\\\\u001b[0m, in \\\\u001b[0;36mlog_standard_metadata\\\\u001b[1;34m(model_name, model, hyperparams, acc, prec, rec, f1, auc, label_map, run_id, test_size, random_state, run_data)\\\\u001b[0m\\\\n\\\\u001b[0;32m     83\\\\u001b[0m \\\\u001b[38;5;28;01mfor\\\\u001b[39;00m key, val \\\\u001b[38;5;129;01min\\\\u001b[39;00m run_data\\\\u001b[38;5;241m.\\\\u001b[39mtags\\\\u001b[38;5;241m.\\\\u001b[39mitems():\\\\n\\\\u001b[0;32m     84\\\\u001b[0m     \\\\u001b[38;5;28;01mif\\\\u001b[39;00m key\\\\u001b[38;5;241m.\\\\u001b[39mstartswith(\\\\u001b[38;5;124m\\\\\\\"\\\\u001b[39m\\\\u001b[38;5;124mjustification_\\\\u001b[39m\\\\u001b[38;5;124m\\\\\\\"\\\\u001b[39m):\\\\n\\\\u001b[1;32m---> 85\\\\u001b[0m         \\\\u001b[43mmlflow\\\\u001b[49m\\\\u001b[38;5;241;43m.\\\\u001b[39;49m\\\\u001b[43mset_tag\\\\u001b[49m\\\\u001b[43m(\\\\u001b[49m\\\\u001b[38;5;124;43mf\\\\u001b[39;49m\\\\u001b[38;5;124;43m\\\\\\\"\\\\u001b[39;49m\\\\u001b[38;5;124;43mmlsea.justification:\\\\u001b[39;49m\\\\u001b[38;5;132;43;01m{\\\\u001b[39;49;00m\\\\u001b[43mkey\\\\u001b[49m\\\\u001b[38;5;241;43m.\\\\u001b[39;49m\\\\u001b[43mreplace\\\\u001b[49m\\\\u001b[43m(\\\\u001b[49m\\\\u001b[38;5;124;43m'\\\\u001b[39;49m\\\\u001b[38;5;124;43mjustification_\\\\u001b[39;49m\\\\u001b[38;5;124;43m'\\\\u001b[39;49m\\\\u001b[43m,\\\\u001b[49m\\\\u001b[38;5;250;43m \\\\u001b[39;49m\\\\u001b[38;5;124;43m'\\\\u001b[39;49m\\\\u001b[38;5;124;43m'\\\\u001b[39;49m\\\\u001b[43m)\\\\u001b[49m\\\\u001b[38;5;132;43;01m}\\\\u001b[39;49;00m\\\\u001b[38;5;124;43m\\\\\\\"\\\\u001b[39;49m\\\\u001b[43m,\\\\u001b[49m\\\\u001b[43m \\\\u001b[49m\\\\u001b[43mval\\\\u001b[49m\\\\u001b[43m)\\\\u001b[49m\\\\n\\\",\\n-      \\\"File \\\\u001b[1;32m~\\\\\\\\anaconda3\\\\\\\\Lib\\\\\\\\site-packages\\\\\\\\mlflow\\\\\\\\tracking\\\\\\\\fluent.py:842\\\\u001b[0m, in \\\\u001b[0;36mset_tag\\\\u001b[1;34m(key, value, synchronous)\\\\u001b[0m\\\\n\\\\u001b[0;32m    840\\\\u001b[0m run_id \\\\u001b[38;5;241m=\\\\u001b[39m _get_or_start_run()\\\\u001b[38;5;241m.\\\\u001b[39minfo\\\\u001b[38;5;241m.\\\\u001b[39mrun_id\\\\n\\\\u001b[0;32m    841\\\\u001b[0m synchronous \\\\u001b[38;5;241m=\\\\u001b[39m synchronous \\\\u001b[38;5;28;01mif\\\\u001b[39;00m synchronous \\\\u001b[38;5;129;01mis\\\\u001b[39;00m \\\\u001b[38;5;129;01mnot\\\\u001b[39;00m \\\\u001b[38;5;28;01mNone\\\\u001b[39;00m \\\\u001b[38;5;28;01melse\\\\u001b[39;00m \\\\u001b[38;5;129;01mnot\\\\u001b[39;00m MLFLOW_ENABLE_ASYNC_LOGGING\\\\u001b[38;5;241m.\\\\u001b[39mget()\\\\n\\\\u001b[1;32m--> 842\\\\u001b[0m \\\\u001b[38;5;28;01mreturn\\\\u001b[39;00m \\\\u001b[43mMlflowClient\\\\u001b[49m\\\\u001b[43m(\\\\u001b[49m\\\\u001b[43m)\\\\u001b[49m\\\\u001b[38;5;241;43m.\\\\u001b[39;49m\\\\u001b[43mset_tag\\\\u001b[49m\\\\u001b[43m(\\\\u001b[49m\\\\u001b[43mrun_id\\\\u001b[49m\\\\u001b[43m,\\\\u001b[49m\\\\u001b[43m \\\\u001b[49m\\\\u001b[43mkey\\\\u001b[49m\\\\u001b[43m,\\\\u001b[49m\\\\u001b[43m \\\\u001b[49m\\\\u001b[43mvalue\\\\u001b[49m\\\\u001b[43m,\\\\u001b[49m\\\\u001b[43m \\\\u001b[49m\\\\u001b[43msynchronous\\\\u001b[49m\\\\u001b[38;5;241;43m=\\\\u001b[39;49m\\\\u001b[43msynchronous\\\\u001b[49m\\\\u001b[43m)\\\\u001b[49m\\\\n\\\",\\n-      \\\"File \\\\u001b[1;32m~\\\\\\\\anaconda3\\\\\\\\Lib\\\\\\\\site-packages\\\\\\\\mlflow\\\\\\\\tracking\\\\\\\\client.py:2136\\\\u001b[0m, in \\\\u001b[0;36mMlflowClient.set_tag\\\\u001b[1;34m(self, run_id, key, value, synchronous)\\\\u001b[0m\\\\n\\\\u001b[0;32m   2082\\\\u001b[0m \\\\u001b[38;5;250m\\\\u001b[39m\\\\u001b[38;5;124;03m\\\\\\\"\\\\\\\"\\\\\\\"\\\\u001b[39;00m\\\\n\\\\u001b[0;32m   2083\\\\u001b[0m \\\\u001b[38;5;124;03mSet a tag on the run with the specified ID. Value is converted to a string.\\\\u001b[39;00m\\\\n\\\\u001b[0;32m   2084\\\\u001b[0m \\\\n\\\\u001b[1;32m   (...)\\\\u001b[0m\\\\n\\\\u001b[0;32m   2131\\\\u001b[0m \\\\u001b[38;5;124;03m    Tags: {'nlp.framework': 'Spark NLP'}\\\\u001b[39;00m\\\\n\\\\u001b[0;32m   2132\\\\u001b[0m \\\\u001b[38;5;124;03m\\\\\\\"\\\\\\\"\\\\\\\"\\\\u001b[39;00m\\\\n\\\\u001b[0;32m   2133\\\\u001b[0m synchronous \\\\u001b[38;5;241m=\\\\u001b[39m (\\\\n\\\\u001b[0;32m   2134\\\\u001b[0m     synchronous \\\\u001b[38;5;28;01mif\\\\u001b[39;00m synchronous \\\\u001b[38;5;129;01mis\\\\u001b[39;00m \\\\u001b[38;5;129;01mnot\\\\u001b[39;00m \\\\u001b[38;5;28;01mNone\\\\u001b[39;00m \\\\u001b[38;5;28;01melse\\\\u001b[39;00m \\\\u001b[38;5;129;01mnot\\\\u001b[39;00m MLFLOW_ENABLE_ASYNC_LOGGING\\\\u001b[38;5;241m.\\\\u001b[39mget()\\\\n\\\\u001b[0;32m   2135\\\\u001b[0m )\\\\n\\\\u001b[1;32m-> 2136\\\\u001b[0m \\\\u001b[38;5;28;01mreturn\\\\u001b[39;00m \\\\u001b[38;5;28;43mself\\\\u001b[39;49m\\\\u001b[38;5;241;43m.\\\\u001b[39;49m\\\\u001b[43m_tracking_client\\\\u001b[49m\\\\u001b[38;5;241;43m.\\\\u001b[39;49m\\\\u001b[43mset_tag\\\\u001b[49m\\\\u001b[43m(\\\\u001b[49m\\\\u001b[43mrun_id\\\\u001b[49m\\\\u001b[43m,\\\\u001b[49m\\\\u001b[43m \\\\u001b[49m\\\\u001b[43mkey\\\\u001b[49m\\\\u001b[43m,\\\\u001b[49m\\\\u001b[43m \\\\u001b[49m\\\\u001b[43mvalue\\\\u001b[49m\\\\u001b[43m,\\\\u001b[49m\\\\u001b[43m \\\\u001b[49m\\\\u001b[43msynchronous\\\\u001b[49m\\\\u001b[38;5;241;43m=\\\\u001b[39;49m\\\\u001b[43msynchronous\\\\u001b[49m\\\\u001b[43m)\\\\u001b[49m\\\\n\\\",\\n-      \\\"File \\\\u001b[1;32m~\\\\\\\\anaconda3\\\\\\\\Lib\\\\\\\\site-packages\\\\\\\\mlflow\\\\\\\\tracking\\\\\\\\_tracking_service\\\\\\\\client.py:738\\\\u001b[0m, in \\\\u001b[0;36mTrackingServiceClient.set_tag\\\\u001b[1;34m(self, run_id, key, value, synchronous)\\\\u001b[0m\\\\n\\\\u001b[0;32m    736\\\\u001b[0m tag \\\\u001b[38;5;241m=\\\\u001b[39m RunTag(key, \\\\u001b[38;5;28mstr\\\\u001b[39m(value))\\\\n\\\\u001b[0;32m    737\\\\u001b[0m \\\\u001b[38;5;28;01mif\\\\u001b[39;00m synchronous:\\\\n\\\\u001b[1;32m--> 738\\\\u001b[0m     \\\\u001b[38;5;28;43mself\\\\u001b[39;49m\\\\u001b[38;5;241;43m.\\\\u001b[39;49m\\\\u001b[43mstore\\\\u001b[49m\\\\u001b[38;5;241;43m.\\\\u001b[39;49m\\\\u001b[43mset_tag\\\\u001b[49m\\\\u001b[43m(\\\\u001b[49m\\\\u001b[43mrun_id\\\\u001b[49m\\\\u001b[43m,\\\\u001b[49m\\\\u001b[43m \\\\u001b[49m\\\\u001b[43mtag\\\\u001b[49m\\\\u001b[43m)\\\\u001b[49m\\\\n\\\\u001b[0;32m    739\\\\u001b[0m \\\\u001b[38;5;28;01melse\\\\u001b[39;00m:\\\\n\\\\u001b[0;32m    740\\\\u001b[0m     \\\\u001b[38;5;28;01mreturn\\\\u001b[39;00m \\\\u001b[38;5;28mself\\\\u001b[39m\\\\u001b[38;5;241m.\\\\u001b[39mstore\\\\u001b[38;5;241m.\\\\u001b[39mset_tag_async(run_id, tag)\\\\n\\\",\\n-      \\\"File \\\\u001b[1;32m~\\\\\\\\anaconda3\\\\\\\\Lib\\\\\\\\site-packages\\\\\\\\mlflow\\\\\\\\store\\\\\\\\tracking\\\\\\\\file_store.py:1060\\\\u001b[0m, in \\\\u001b[0;36mFileStore.set_tag\\\\u001b[1;34m(self, run_id, tag)\\\\u001b[0m\\\\n\\\\u001b[0;32m   1058\\\\u001b[0m \\\\u001b[38;5;28;01mdef\\\\u001b[39;00m \\\\u001b[38;5;21mset_tag\\\\u001b[39m(\\\\u001b[38;5;28mself\\\\u001b[39m, run_id, tag):\\\\n\\\\u001b[0;32m   1059\\\\u001b[0m     _validate_run_id(run_id)\\\\n\\\\u001b[1;32m-> 1060\\\\u001b[0m     \\\\u001b[43m_validate_tag_name\\\\u001b[49m\\\\u001b[43m(\\\\u001b[49m\\\\u001b[43mtag\\\\u001b[49m\\\\u001b[38;5;241;43m.\\\\u001b[39;49m\\\\u001b[43mkey\\\\u001b[49m\\\\u001b[43m)\\\\u001b[49m\\\\n\\\\u001b[0;32m   1061\\\\u001b[0m     run_info \\\\u001b[38;5;241m=\\\\u001b[39m \\\\u001b[38;5;28mself\\\\u001b[39m\\\\u001b[38;5;241m.\\\\u001b[39m_get_run_info(run_id)\\\\n\\\\u001b[0;32m   1062\\\\u001b[0m     check_run_is_active(run_info)\\\\n\\\",\\n-      \\\"File \\\\u001b[1;32m~\\\\\\\\anaconda3\\\\\\\\Lib\\\\\\\\site-packages\\\\\\\\mlflow\\\\\\\\utils\\\\\\\\validation.py:358\\\\u001b[0m, in \\\\u001b[0;36m_validate_tag_name\\\\u001b[1;34m(name, path)\\\\u001b[0m\\\\n\\\\u001b[0;32m    353\\\\u001b[0m     \\\\u001b[38;5;28;01mraise\\\\u001b[39;00m MlflowException(\\\\n\\\\u001b[0;32m    354\\\\u001b[0m         missing_value(path),\\\\n\\\\u001b[0;32m    355\\\\u001b[0m         error_code\\\\u001b[38;5;241m=\\\\u001b[39mINVALID_PARAMETER_VALUE,\\\\n\\\\u001b[0;32m    356\\\\u001b[0m     )\\\\n\\\\u001b[0;32m    357\\\\u001b[0m \\\\u001b[38;5;28;01mif\\\\u001b[39;00m \\\\u001b[38;5;129;01mnot\\\\u001b[39;00m validate_param_and_metric_name(name):\\\\n\\\\u001b[1;32m--> 358\\\\u001b[0m     \\\\u001b[38;5;28;01mraise\\\\u001b[39;00m MlflowException(\\\\n\\\\u001b[0;32m    359\\\\u001b[0m         invalid_value(path, name, bad_character_message()),\\\\n\\\\u001b[0;32m    360\\\\u001b[0m         INVALID_PARAMETER_VALUE,\\\\n\\\\u001b[0;32m    361\\\\u001b[0m     )\\\\n\\\\u001b[0;32m    362\\\\u001b[0m \\\\u001b[38;5;28;01mif\\\\u001b[39;00m path_not_unique(name):\\\\n\\\\u001b[0;32m    363\\\\u001b[0m     \\\\u001b[38;5;28;01mraise\\\\u001b[39;00m MlflowException(\\\\n\\\\u001b[0;32m    364\\\\u001b[0m         invalid_value(path, name, bad_path_message(name)),\\\\n\\\\u001b[0;32m    365\\\\u001b[0m         INVALID_PARAMETER_VALUE,\\\\n\\\\u001b[0;32m    366\\\\u001b[0m     )\\\\n\\\",\\n-      \\\"\\\\u001b[1;31mMlflowException\\\\u001b[0m: Invalid value \\\\\\\"mlsea.justification:bootstrap\\\\\\\" for parameter 'key' supplied: Names may only contain alphanumerics, underscores (_), dashes (-), periods (.), spaces ( ) and slashes (/).\\\"\\n+     \\\"name\\\": \\\"stdout\\\",\\n+     \\\"output_type\\\": \\\"stream\\\",\\n+     \\\"text\\\": [\\n+      \\\"\\u2705 Commit successful.\\\\n\\\",\\n+      \\\"\\ud83d\\ude80 Push successful.\\\\n\\\"\\n      ]\\n     },\\n     {\\n@@ -1368,7 +1425,7 @@\\n     },\\n     {\\n      \\\"data\\\": {\\n-      \\\"image/png\\\": \\\"iVBORw0KGgoAAAANSUhEUgAABJEAAAKoCAYAAADH627tAAAAOXRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjcuMiwgaHR0cHM6Ly9tYXRwbG90bGliLm9yZy8pXeV/AAAACXBIWXMAAA9hAAAPYQGoP6dpAABCGklEQVR4nO3deZhcZYH372/1ln3fIARI2EEFNLKDIFsQBUdUfEdAJ44LisqMjsuoA6jMOz9FRpTXHY2DMgrOMAgyCgQBRbYg+76FPQnZ01k6vVT9/gh00nSSJ4SQ7iT3fV1c0/VUnTpPlc80xafOOV2p1Wq1AAAAAMBa1PX0BAAAAADo/UQkAAAAAIpEJAAAAACKRCQAAAAAikQkAAAAAIpEJAAAAACKRCQAAAAAikQkAAAAAIpEJAAAAACKRCQAgCRnnXVWKpXKq36eJ598MpVKJT//+c832j4BADaGhp6eAADA5mTrrbfOzTffnB133LGnpwIAsEGJSAAAG1CfPn2y//779/Q0AAA2OKezAQAbzezZs/PRj3402267bfr06ZNRo0bloIMOytSpUzsfM3Xq1BxxxBEZPHhw+vfvn4MOOijXXnttl+d56TSwO++8MyeccEIGDx6cIUOG5OSTT87s2bO7PPbiiy/O0Ucfna233jr9+vXL7rvvni9+8YtZsmTJWuf6uc99LkOGDElHR0fn2Kc+9alUKpWcc845nWNz585NXV1dzj///CRrPp3tyiuvzN57750+ffpkwoQJ+da3vvWK3jsAgJ4mIgEAG80pp5ySyy67LGeccUauvvrqXHDBBTnyyCMzd+7cJMkvf/nLHH300Rk8eHD+4z/+I5dcckmGDx+eSZMmdQtJSfKud70rO+20U/7rv/4rZ511Vi677LJMmjQpbW1tnY959NFHc+yxx+anP/1p/vCHP+Qf/uEfcskll+S4445b61yPPPLILFq0KLfddlvn2NSpU9OvX79cc801nWPXXnttarVajjzyyDU+17XXXpt3vvOdGTRoUH7961/nnHPOySWXXJIpU6as83sHANDTnM4GAGw0f/nLX/LhD384H/nIRzrH3vnOdyZJli5dmtNPPz3veMc78j//8z+d9x977LF505velC996Uu59dZbuzzfCSeckG9+85tJkqOPPjpjxozJSSedlEsuuSQnnXRSkuQrX/lK5+NrtVoOOuig7L777jn00ENzzz33ZM8991ztXA855JA0NTVl6tSpOeCAA/Lcc8/loYceyhe+8IV897vfzfLly9OnT59MnTo1Y8eOze67777G1/3lL385Y8aMyTXXXJO+ffsmSSZNmpTx48e/gncPAKBnORIJANho9t133/z85z/P2WefnVtuuaXLEUM33XRT5s2blw9+8INpb2/v/KdareaYY47JtGnTup2C9lIoesmJJ56YhoaGXHfddZ1jTzzxRN7//vdnq622Sn19fRobG3PooYcmSR588ME1zrV///454IADOk+1u+aaazJ06NB87nOfS2tra2688cYkK45OWttRSEuWLMm0adNywgkndAakJBk0aFDxaCgAgN5ERAIANpqLL744H/zgB3PBBRfkgAMOyPDhw/OBD3wgM2fOzKxZs5Ik73nPe9LY2Njln2984xup1WqZN29el+fbaqututxuaGjIiBEjOk+PW7x4cQ455JDceuutOfvss3P99ddn2rRpufTSS5Mky5YtW+t8jzzyyNxyyy1ZsmRJpk6dmsMPPzwjRozIxIkTM3Xq1EyfPj3Tp09fa0SaP39+qtVqt7mubv4AAL2Z09kAgI1m5MiROe+883Leeefl6aefzuWXX54vfvGLeeGFF/KP//iPSZLzzz9/jX/dbMyYMV1uz5w5M9tss03n7fb29sydOzcjRoxIkvzxj3/M888/n+uvv77z6KMkWbBgwTrN94gjjsi//Mu/5E9/+lOuvfbanHnmmZ3jV199dSZMmNB5e02GDRuWSqWSmTNndrtvdWMAAL2VI5EAgB6x3Xbb5ZOf/GSOOuqo3HHHHTnooIMydOjQPPDAA3nzm9+82n+ampq6PMdFF13U5fYll1yS9vb2HHbYYUmSSqWSJOnTp0+Xx/3oRz9apznuu+++GTx4cM4777zMnDkzRx11VJIVRyjdeeedueSSS7LHHntk7Nixa3yOAQMGZN99982ll16alpaWzvHm5uZcccUV6zQPAIDewJFIAMBGsXDhwrz1rW/N+9///uy2224ZNGhQpk2blj/84Q854YQTMnDgwJx//vn54Ac/mHnz5uU973lPRo8endmzZ+fuu+/O7Nmz84Mf/KDLc1566aVpaGjIUUcdlfvvvz//8i//kr322isnnnhikuTAAw/MsGHDcuqpp+bMM89MY2NjLrrootx9993r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m6Onnnoq3/rWt3LnnXemX79+mTRpUj75yU+mb9++xW1/97vfZcqUKZkxY0bGjRuXj370oznyyCM3wqzZUqzv+rz66qtzzTXX5L777svs2bNz+umn55RTTtlIs2ZLsD5rc/Hixbnoooty00035amnnkpDQ0N23333nHbaadltt9024uzZ3K3v787vfve7ufHGGzNz5sxUKpVsv/32OemkkzJp0qSNNPNNj4i0Hu6555589rOfzdvf/vZ85jOfyV133ZVzzjknjY2N+Zu/+Zs1btfW1pY+ffrkox/9aLbaaqs0NzfnV7/6VT7+8Y/nF7/4RbbffvuN9yLYLK3v2rzllltyxx135F3veld22WWXvPDCC/nxj3+cD33oQ/n1r3+d/v37b7wXwWZrfddnklx66aUZN25c9ttvv/zxj3/cOBNms9Tc3JyPf/zj2WqrrfLNb34z8+bNy7e//e0sXLgwX//619e67dSpU3PWWWfl7/7u77L//vvn+uuvzz//8z9n4MCB2X///TfSK2Bz9mrW57XXXpvnnnsuhxxySC699NKNNGO2FOu7NmfOnJlLL700xx9/fE499dS0t7fnV7/6VT70oQ/lZz/7mZDEBvFqfncuW7YsJ5xwQsaPH59arZZrr702X/7yl1Or1XLMMcdspFewianxin3qU5+qfeADH+gydvbZZ9cmTZpU6+joeEXPtWTJktr+++9f++lPf7ohp8gWan3X5vz582vVarXL2COPPFKbOHFi7YorrnhN5sqW59X87nzp/mnTptUmTpxYu//++1+zebJ5mzJlSu2ggw6qzZ8/v3Ps97//fW3ixIm1J554Yq3bvvvd76594Qtf6DJ22mmn1T74wQ++BjNlS/Rq1ueqv0cnTpxYu/DCC1+rabIFWt+1uXTp0tqyZcu6jLW0tNQmTZpUO+uss16r6bKFeTW/O1dn8uTJtU984hMbcIabF9dEeoVaW1szbdq0HH300V3GjznmmMyZMycPP/zwK3q+fv36pampKe3t7RtymmyBXs3aHDp0aCqVSpexnXbaKfX19Zk9e/ZrMl+2LK/2d2ddnX9dsWHcdNNN2XfffTN06NDOscMPPzxNTU35y1/+ssbtnnvuuTz55JPdDm8/5phjcv/992fBggWv0YzZkqzv+kz8nuS1tb5rs1+/ft1OJ+rTp08mTJjgMyYbzKv53bk6Q4YM8d/na+HfNq/Qs88+m7a2tkyYMKHL+A477JAkmT59evE5qtVq2tvbM2fOnHz7299OXV1djj322Ndkvmw5NsTaXNU999yTjo6Obs8H62NDr09YX9OnT++2DpuamjJu3Li1rsOX7nv5thMmTEitVsuTTz65wefKlmd91ye81jbk2ly2bFkefvhhnzHZYF7t+qzVamlvb09zc3OuvPLK3Hrrret0zc4tlWsivUKLFi1KkgwaNKjL+Eu3X7p/bX74wx/mZz/7WZJk+PDh+c53vpNx48Zt4JmypdkQa/Ml7e3tOffcc7P99tvn4IMP3nCTZIu1IdcnvBqLFi3qtg6TFWtxbeuwubk5STJw4MAu44MHD06SLFy4cAPOki3V+q5PeK1tyLX5/e9/Py0tLTnxxBM31PTYwr3a9XnbbbfltNNOS5LU19fn85//vD+asRYiUlb81YA5c+YUHzd27NjOn19+6s8r8d73vjeHHXZY5syZk//5n//J6aefnh/84AcuLEc3G3ttvuQb3/hGHn/88fzkJz9JQ4NfE6xeT61PeC3UarV1etzL1/BL21nbvJbWdX3CxvZK1+Yf/vCH/OpXv8oXvvCFbLvttq/RrGCFdV2fr3/963PhhRdm8eLFuemmm/LNb34z9fX1xT/8sqXyX4dJrrvuunz1q18tPu6iiy7q/Mbx5UXzpW8oX7p/bUaNGpVRo0YlSQ4++OCcfPLJ+eEPf5jzzjvvFc6czd3GXptJ8uMf/ziXX355vvnNb/oT6qxVT6xPeLUGDx7cue5WtXjx4rWeWvHSN5zNzc0ZMWJE57g1zIa0vusTXmsbYm3ecsst+epXv5pTTjnFqUJsUK92fQ4YMKDzv3v23XfftLa25tvf/naOO+641NfXb/D5bupEpCTHHXdcjjvuuHV6bGtraxobGzN9+vQceOCBneNPPPFEku7XSiipq6vLLrvsknvvvfcVbceWYWOvzd/85jf58Y9/nC996Us59NBD12/SbDF68ncnrK8JEyZ0uz5Ca2trnn322Rx//PFr3S5Zcd2F8ePHd45Pnz49lUqlyxisr/Vdn/Bae7Vr87777us8RejTn/70azVNtlAb+nfn7rvvnksuuSTz58/PyJEjN9Q0NxsurP0KNTU1ZZ999snUqVO7jF911VUZOXJkdt1111f0fO3t7bn//vuzzTbbbMhpsgV6tWvzqquuyjnnnJNTTz01J5xwwms5VbZAG/p3J6yvAw88MNOmTevy19Suu+66tLa25qCDDlrjdttss03Gjx+fq6++usv4VVddlde97nVd/iIMrK/1XZ/wWns1a3P69Ok5/fTTs9dee+XMM890+i8b3Ib+3XnXXXdlwIAB/t2+BiLSevjwhz+cBx54IGeffXZuv/32/PSnP81ll12WU089tcufV/2bv/mbfPzjH++8femll+brX/96rrrqqvz1r3/NVVddldNOOy3PPPNMJk+e3BMvhc3M+q7Nv/71rznzzDOz9957Z7/99su9997b+c+zzz7bEy+FzdD6rs9kxRqdOnVq7rjjjiTJtGnTMnXq1DzwwAMb9TWw6Xv3u9+dQYMG5bOf/WxuvvnmXHnllTnnnHPytre9rcsRcV/72tey3377ddn21FNPzdSpU/O9730vt99+e84999zccsstOfXUUzf2y2Az9WrW5xNPPJGpU6d2xvrHHnssU6dOXa8/bw0vt75rc968efnkJz+ZhoaGnHLKKXnwwQc7P2M+9NBDPfFS2Ayt7/p89NFH8+lPfzq//e1vM23atNxwww05++yz89vf/jaTJ092bdg18K6shz333DPnnntuvv/97+fKK6/M6NGj80//9E/dLrzV0dGRjo6Ozts77LBDrrvuupx77rmd11TYY489cuGFF2aXXXbZyK+CzdH6rs3bb7897e3tueOOO7oFzXe84x0566yzNsLs2dyt7/pMkh/96EedASlJzj///CTWJ6/coEGD8oMf/CDnnHNOPve5z6Vv376ZNGlSPvWpT3V5XLVa7bYOjzzyyLS0tORnP/tZfvnLX2bbbbfNv/3bv2X//fffmC+BzdirWZ/XXHNNfvKTn3TevvLKK3PllVdm6623zhVXXLFR5s/ma33X5hNPPJFZs2YlST7xiU90eay1yYayvutz+PDhGThwYC644ILMnTs3AwcOzPjx4/Otb30rhx122EZ+FZuOSs2fewAAAACgwOlsAAAAABSJSAAAAAAUiUgAAAAAFIlIAAAAABSJSAAAAAAUiUgAAAAAFIlIAAAAABSJSAAAAAAUiUgAAAAAFIlIAAAAABSJSAAAAAAUiUgAAAAAFP3/EOeTmkn18kEAAAAASUVORK5CYII=\\\",\\n+      \\\"image/png\\\": \\\"\\\",\\n       \\\"text/plain\\\": [\\n        \\\"<Figure size 1150x660 with 1 Axes>\\\"\\n       ]\\n@@ -1380,14 +1437,24 @@\\n    \\\"source\\\": [\\n     \\\"\\\\n\\\",\\n     \\\"with mlflow.start_run() as run:\\\\n\\\",\\n+    \\\"    # Start time\\\\n\\\",\\n+    \\\"    start_time = datetime.now().isoformat()\\\\n\\\",\\n+    \\\"    mlflow.set_tag(\\\\\\\"PROV_startedAtTime\\\\\\\", start_time)\\\\n\\\",\\n+    \\\"\\\\n\\\",\\n     \\\"    #################################################\\\\n\\\",\\n     \\\"# Justification LOGGER\\\\n\\\",\\n     \\\"################################################\\\\n\\\",\\n     \\\"    mlflow.log_params(session_metadata)\\\\n\\\",\\n+    \\\"\\\\n\\\",\\n     \\\"    # \\u2500\\u2500 2) Load into a DataFrame \\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\\\n\\\",\\n     \\\"    df = pd.DataFrame(dataset)\\\\n\\\",\\n     \\\"\\\\n\\\",\\n     \\\"    target_col = df.columns[-1]      # e.g. \\\\\\\"species\\\\\\\"\\\\n\\\",\\n+    \\\"    categorized_fields[\\\\\\\"FAIR4ML\\\\\\\"] = {\\\\n\\\",\\n+    \\\"        \\\\\\\"target_variable\\\\\\\": target_col,\\\\n\\\",\\n+    \\\"         \\\\\\\"num_samples\\\\\\\":df.shape[0]\\\\n\\\",\\n+    \\\"    }\\\\n\\\",\\n+    \\\"    log_categorized_fields_to_mlflow(categorized_fields)\\\\n\\\",\\n     \\\"\\\\n\\\",\\n     \\\"    # 2) extract y as the Series of labels\\\\n\\\",\\n     \\\"    y = df[target_col]               # length == n_samples\\\\n\\\",\\n@@ -1407,13 +1474,13 @@\\n     \\\"        except Exception:\\\\n\\\",\\n     \\\"            pass\\\\n\\\",\\n     \\\"    \\\\n\\\",\\n-    \\\"    print(\\\\\\\"Shapes:\\\\\\\", X.shape, y.shape)\\\\n\\\",\\n+    \\\"    print(\\\\\\\"ML_EXP_Shapes:\\\\\\\", X.shape, y.shape)\\\\n\\\",\\n     \\\"\\\\n\\\",\\n     \\\"    le = LabelEncoder()\\\\n\\\",\\n     \\\"    y = le.fit_transform(y)  \\\\n\\\",\\n     \\\"    \\\\n\\\",\\n     \\\"    # now y_enc is a 1d numpy array of ints 0,1,2\\\\n\\\",\\n-    \\\"    print(\\\\\\\"Classes:\\\\\\\", le.classes_)  \\\\n\\\",\\n+    \\\"    print(\\\\\\\"ML_EXP_Classes:\\\\\\\", le.classes_)  \\\\n\\\",\\n     \\\"    \\\\n\\\",\\n     \\\"    # \\u2500\\u2500 4) Cast feature columns to numeric where possible \\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\\\n\\\",\\n     \\\"    for col in X.columns:\\\\n\\\",\\n@@ -1453,38 +1520,29 @@\\n     \\\"    db_meta = fetch_db_metadata(db_id,table_id)\\\\n\\\",\\n     \\\"    # log_db_metadata(db_meta)\\\\n\\\",\\n     \\\"\\\\n\\\",\\n-    \\\"    #OAI metadata logging from api endpoint\\\\n\\\",\\n-    \\\"    # log as tags\\\\n\\\",\\n-    \\\"    # repo_name=\\\\\\\"Database Repository\\\\\\\"\\\\n\\\",\\n-    \\\"    # mlflow.set_tag(\\\\\\\"dbrepo.repository_name\\\\\\\", repo_name)\\\\n\\\",\\n-    \\\"    # mlflow.set_tag(\\\\\\\"dbrepo.base_url\\\\\\\",       base_url)\\\\n\\\",\\n-    \\\"    # mlflow.set_tag(\\\\\\\"dbrepo.protocol_version\\\\\\\", protocol)\\\\n\\\",\\n-    \\\"    # mlflow.set_tag(\\\\\\\"dbrepo.admin_email\\\\\\\",     admin_email)\\\\n\\\",\\n-    \\\"    # mlflow.set_tag(\\\\\\\"dbrepo.granularity\\\\\\\",     gran)\\\\n\\\",\\n-    \\\"\\\\n\\\",\\n-    \\\"    #From history API logging\\\\n\\\",\\n+    \\\"   \\\\n\\\",\\n     \\\"    # provenance tags\\\\n\\\",\\n-    \\\"    mlflow.set_tag(\\\\\\\"dbrepo.table_last_modified\\\\\\\", ts_last)\\\\n\\\",\\n+    \\\"    mlflow.set_tag(\\\\\\\"Internal_DBRepo_table_last_modified\\\\\\\", ts_last)\\\\n\\\",\\n     \\\"\\\\n\\\",\\n     \\\"    # row-count metrics\\\\n\\\",\\n-    \\\"    mlflow.log_metric(\\\\\\\"dbrepo.row_count_start\\\\\\\", count_start)\\\\n\\\",\\n-    \\\"    mlflow.log_metric(\\\\\\\"dbrepo.row_count_end\\\\\\\",   count_end)\\\\n\\\",\\n+    \\\"    mlflow.log_metric(\\\\\\\"Internal_DBRepo_row_count_start\\\\\\\", count_start)\\\\n\\\",\\n+    \\\"    mlflow.log_metric(\\\\\\\"Internal_DBRepo_row_count_end\\\\\\\",   count_end)\\\\n\\\",\\n     \\\"\\\\n\\\",\\n     \\\"    # change-event metrics\\\\n\\\",\\n-    \\\"    mlflow.log_metric(\\\\\\\"dbrepo.num_inserts\\\\\\\", n_insert)\\\\n\\\",\\n-    \\\"    mlflow.log_metric(\\\\\\\"dbrepo.num_deletes\\\\\\\", n_delete)\\\\n\\\",\\n+    \\\"    mlflow.log_metric(\\\\\\\"Internal_DBRepo_num_inserts\\\\\\\", n_insert)\\\\n\\\",\\n+    \\\"    mlflow.log_metric(\\\\\\\"Internal_DBRepo_num_deletes\\\\\\\", n_delete)\\\\n\\\",\\n     \\\"    \\\\n\\\",\\n     \\\"    # 2) Capture raw metadata\\\\n\\\",\\n-    \\\"    mlflow.set_tag(\\\\\\\"data_source\\\\\\\", API_URL)\\\\n\\\",\\n-    \\\"    mlflow.log_param(\\\\\\\"retrieval_time\\\\\\\", datetime.utcnow().isoformat())\\\\n\\\",\\n-    \\\"    mlflow.log_param(\\\\\\\"n_records\\\\\\\", len(df))\\\\n\\\",\\n-    \\\"    mlflow.log_param(\\\\\\\"columns_raw\\\\\\\", df.columns.tolist())\\\\n\\\",\\n-    \\\"    mlflow.log_param(\\\\\\\"dropped_columns\\\\\\\", id_cols)\\\\n\\\",\\n+    \\\"    mlflow.set_tag(\\\\\\\"Internal_DBRepo_data_source\\\\\\\", API_URL)\\\\n\\\",\\n+    \\\"    mlflow.log_param(\\\\\\\"Internal_DBRepo_retrieval_time\\\\\\\", datetime.utcnow().isoformat())\\\\n\\\",\\n+    \\\"    mlflow.log_param(\\\\\\\"Internal_DBRepo_n_records\\\\\\\", len(df))\\\\n\\\",\\n+    \\\"    mlflow.log_param(\\\\\\\"Internal_DBRepo_columns_raw\\\\\\\", df.columns.tolist())\\\\n\\\",\\n+    \\\"    mlflow.log_param(\\\\\\\"Internal_DBRepo_dropped_columns\\\\\\\", id_cols)\\\\n\\\",\\n     \\\"\\\\n\\\",\\n     \\\"    # 4) Post\\u2010processing metadata\\\\n\\\",\\n-    \\\"    mlflow.log_param(\\\\\\\"n_features_final\\\\\\\", X.shape[1])\\\\n\\\",\\n-    \\\"    mlflow.log_param(\\\\\\\"feature_names\\\\\\\", X.columns.tolist())\\\\n\\\",\\n-    \\\"    mlflow.set_tag(\\\\\\\"target_name\\\\\\\", y)\\\\n\\\",\\n+    \\\"    mlflow.log_param(\\\\\\\"Internal_DBRepo_n_features_final\\\\\\\", X.shape[1])\\\\n\\\",\\n+    \\\"    mlflow.log_param(\\\\\\\"Internal_DBRepo_feature_names\\\\\\\", X.columns.tolist())\\\\n\\\",\\n+    \\\"    mlflow.set_tag(\\\\\\\"Internal_DBRepo_target_name\\\\\\\", y)\\\\n\\\",\\n     \\\"\\\\n\\\",\\n     \\\"       # Label encoding\\\\n\\\",\\n     \\\"    label_map = {int(idx): cls for idx, cls in enumerate(le.classes_)}\\\\n\\\",\\n@@ -1499,10 +1557,10 @@\\n     \\\"   \\\\n\\\",\\n     \\\"    ts = datetime.now().strftime(\\\\\\\"%Y%m%d_%H%M%S\\\\\\\")\\\\n\\\",\\n     \\\"    model_name = f\\\\\\\"RandomForest_Iris_v{ts}\\\\\\\"\\\\n\\\",\\n-    \\\"    mlflow.set_tag(\\\\\\\"model_name\\\\\\\",model_name)\\\\n\\\",\\n+    \\\"    mlflow.set_tag(\\\\\\\"ML_EXP_model_name\\\\\\\",model_name)\\\\n\\\",\\n     \\\"    \\\\n\\\",\\n     \\\"    train_start_ts = datetime.now().isoformat()\\\\n\\\",\\n-    \\\"    mlflow.set_tag(\\\\\\\"training_start_time\\\\\\\", train_start_ts)\\\\n\\\",\\n+    \\\"    mlflow.set_tag(\\\\\\\"ML_EXP_training_start_time\\\\\\\", train_start_ts)\\\\n\\\",\\n     \\\"\\\\n\\\",\\n     \\\"    test_size    = 0.2\\\\n\\\",\\n     \\\"    random_state = 42\\\\n\\\",\\n@@ -1511,14 +1569,16 @@\\n     \\\"    X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=test_size, random_state=random_state)\\\\n\\\",\\n     \\\"    \\\\n\\\",\\n     \\\"    # \\u2500\\u2500 2) Log dataset split params \\u2500\\u2500\\\\n\\\",\\n-    \\\"    mlflow.log_param(\\\\\\\"test_size\\\\\\\", test_size)\\\\n\\\",\\n-    \\\"    mlflow.log_param(\\\\\\\"random_state\\\\\\\", random_state)\\\\n\\\",\\n-    \\\"    mlflow.log_param(\\\\\\\"n_train_samples\\\\\\\", X_train.shape[0])\\\\n\\\",\\n-    \\\"    mlflow.log_param(\\\\\\\"n_test_samples\\\\\\\",  X_test.shape[0])\\\\n\\\",\\n-    \\\"    mlflow.log_param(\\\\\\\"n_features\\\\\\\",      X_train.shape[1])\\\\n\\\",\\n+    \\\"    mlflow.log_param(\\\\\\\"ML_EXP_test_size\\\\\\\", test_size)\\\\n\\\",\\n+    \\\"    mlflow.log_param(\\\\\\\"ML_EXP_random_state\\\\\\\", random_state)\\\\n\\\",\\n+    \\\"    mlflow.log_param(\\\\\\\"ML_EXP_n_train_samples\\\\\\\", X_train.shape[0])\\\\n\\\",\\n+    \\\"    mlflow.log_param(\\\\\\\"ML_EXP_n_test_samples\\\\\\\",  X_test.shape[0])\\\\n\\\",\\n+    \\\"    mlflow.log_param(\\\\\\\"ML_EXP_n_features\\\\\\\",      X_train.shape[1])\\\\n\\\",\\n+    \\\"    mlflow.log_param(\\\\\\\"ML_EXP_n_test_samples\\\\\\\",  X_test.shape[0])\\\\n\\\",\\n+    \\\"    mlflow.log_param(\\\\\\\"ML_EXP_n_features\\\\\\\",      X_train.shape[1])\\\\n\\\",\\n     \\\"\\\\n\\\",\\n     \\\"     # 1) Define a more complex hyperparameter dict\\\\n\\\",\\n-    \\\"    hyperparams = {\\\\n\\\",\\n+    \\\"    ML_EXP_hyperparams = {\\\\n\\\",\\n     \\\"        \\\\\\\"n_estimators\\\\\\\":       200,\\\\n\\\",\\n     \\\"        \\\\\\\"criterion\\\\\\\":          \\\\\\\"entropy\\\\\\\",\\\\n\\\",\\n     \\\"        \\\\\\\"max_depth\\\\\\\":          12,\\\\n\\\",\\n@@ -1534,21 +1594,21 @@\\n     \\\"    }\\\\n\\\",\\n     \\\"    \\\\n\\\",\\n     \\\"    # 2) Log them ALL at once\\\\n\\\",\\n-    \\\"    mlflow.log_params(hyperparams)\\\\n\\\",\\n+    \\\"    mlflow.log_params(ML_EXP_hyperparams)\\\\n\\\",\\n     \\\"    model = RandomForestClassifier(**hyperparams)\\\\n\\\",\\n     \\\"\\\\n\\\",\\n     \\\"    for key, val in hyperparams.items():\\\\n\\\",\\n     \\\"        log_with_justification(mlflow.log_param, key, val, context=\\\\\\\"Hyperparameter configuration\\\\\\\")\\\\n\\\",\\n     \\\"\\\\n\\\",\\n     \\\"    # Prompt for and log justifications for high-level modeling decisions\\\\n\\\",\\n-    \\\"    log_justification(\\\\\\\"model_choice\\\\\\\", \\\\\\\"Why did you choose RandomForestClassifier for this task?\\\\\\\")\\\\n\\\",\\n-    \\\"    log_justification(\\\\\\\"target_variable\\\\\\\", \\\\\\\"Why did you choose this column as the prediction target?\\\\\\\")\\\\n\\\",\\n-    \\\"    log_justification(\\\\\\\"test_split\\\\\\\", \\\\\\\"Why this train/test ratio (e.g., 80/20)?\\\\\\\")\\\\n\\\",\\n-    \\\"    log_justification(\\\\\\\"metric_choice\\\\\\\", \\\\\\\"Why accuracy/f1/ROC-AUC as your evaluation metric?\\\\\\\")\\\\n\\\",\\n-    \\\"    log_justification(\\\\\\\"threshold_accuracy\\\\\\\", \\\\\\\"Why 0.95 as performance threshold?\\\\\\\")\\\\n\\\",\\n-    \\\"    log_justification(\\\\\\\"dataset_version\\\\\\\", \\\\\\\"Why use this specific dataset version?\\\\\\\")\\\\n\\\",\\n-    \\\"    log_justification(\\\\\\\"drop_column_X\\\\\\\", \\\\\\\"Why drop any specific columns from the dataset?\\\\\\\")\\\\n\\\",\\n-    \\\"    log_justification(\\\\\\\"experiment_name\\\\\\\", \\\\\\\"Any context behind this experiment name or setup?\\\\\\\")\\\\n\\\",\\n+    \\\"    log_justification(\\\\\\\"ML_EXP_model_choice\\\\\\\", \\\\\\\"Why did you choose RandomForestClassifier for this task?\\\\\\\")\\\\n\\\",\\n+    \\\"    log_justification(\\\\\\\"ML_EXP_target_variable\\\\\\\", \\\\\\\"Why did you choose this column as the prediction target?\\\\\\\")\\\\n\\\",\\n+    \\\"    log_justification(\\\\\\\"ML_EXP_test_split\\\\\\\", \\\\\\\"Why this train/test ratio (e.g., 80/20)?\\\\\\\")\\\\n\\\",\\n+    \\\"    log_justification(\\\\\\\"ML_EXP_metric_choice\\\\\\\", \\\\\\\"Why accuracy/f1/ROC-AUC as your evaluation metric?\\\\\\\")\\\\n\\\",\\n+    \\\"    log_justification(\\\\\\\"ML_EXP_threshold_accuracy\\\\\\\", \\\\\\\"Why 0.95 as performance threshold?\\\\\\\")\\\\n\\\",\\n+    \\\"    log_justification(\\\\\\\"ML_EXP_dataset_version\\\\\\\", \\\\\\\"Why use this specific dataset version?\\\\\\\")\\\\n\\\",\\n+    \\\"    log_justification(\\\\\\\"ML_EXP_drop_column_X\\\\\\\", \\\\\\\"Why drop any specific columns from the dataset?\\\\\\\")\\\\n\\\",\\n+    \\\"    log_justification(\\\\\\\"ML_EXP_experiment_name\\\\\\\", \\\\\\\"Any context behind this experiment name or setup?\\\\\\\")\\\\n\\\",\\n     \\\"\\\\n\\\",\\n     \\\"\\\\n\\\",\\n     \\\"\\\\n\\\",\\n@@ -1556,7 +1616,7 @@\\n     \\\"    model.fit(X_train, y_train)\\\\n\\\",\\n     \\\"\\\\n\\\",\\n     \\\"    train_end_ts = datetime.now().isoformat()\\\\n\\\",\\n-    \\\"    mlflow.set_tag(\\\\\\\"training_end_time\\\\\\\", train_end_ts)\\\\n\\\",\\n+    \\\"    mlflow.set_tag(\\\\\\\"ML_EXP_training_end_time\\\\\\\", train_end_ts)\\\\n\\\",\\n     \\\"\\\\n\\\",\\n     \\\"     # \\u2500\\u2500 6) Predict & log metrics \\u2500\\u2500\\\\n\\\",\\n     \\\"    y_pred = model.predict(X_test)\\\\n\\\",\\n@@ -1567,11 +1627,11 @@\\n     \\\"    rec  = recall_score(y_test,    y_pred, average=\\\\\\\"macro\\\\\\\")\\\\n\\\",\\n     \\\"    f1   = f1_score(y_test,      y_pred, average=\\\\\\\"macro\\\\\\\")\\\\n\\\",\\n     \\\"    \\\\n\\\",\\n-    \\\"    mlflow.log_metric(\\\\\\\"precision_macro\\\\\\\", prec)\\\\n\\\",\\n-    \\\"    mlflow.log_metric(\\\\\\\"recall_macro\\\\\\\",    rec)\\\\n\\\",\\n-    \\\"    mlflow.log_metric(\\\\\\\"f1_macro\\\\\\\",        f1)\\\\n\\\",\\n-    \\\"    mlflow.log_metric(\\\\\\\"accuracy\\\\\\\", acc)\\\\n\\\",\\n-    \\\"    mlflow.log_metric(\\\\\\\"roc_auc\\\\\\\",   auc)\\\\n\\\",\\n+    \\\"    mlflow.log_metric(\\\\\\\"ML_EXP_precision_macro\\\\\\\", prec)\\\\n\\\",\\n+    \\\"    mlflow.log_metric(\\\\\\\"ML_EXP_recall_macro\\\\\\\",    rec)\\\\n\\\",\\n+    \\\"    mlflow.log_metric(\\\\\\\"ML_EXP_f1_macro\\\\\\\",        f1)\\\\n\\\",\\n+    \\\"    mlflow.log_metric(\\\\\\\"ML_EXP_accuracy\\\\\\\", acc)\\\\n\\\",\\n+    \\\"    mlflow.log_metric(\\\\\\\"ML_EXP_roc_auc\\\\\\\",   auc)\\\\n\\\",\\n     \\\"\\\\n\\\",\\n     \\\"    # \\u2705 Log Environment Automatically\\\\n\\\",\\n     \\\"    mlflow.log_params({\\\\n\\\",\\n@@ -1586,16 +1646,16 @@\\n     \\\"    })\\\\n\\\",\\n     \\\"\\\\n\\\",\\n     \\\"    # \\u2705 Git and Notebook Metadata\\\\n\\\",\\n-    \\\"    mlflow.set_tag(\\\\\\\"notebook_name\\\\\\\", \\\\\\\"RQ1.ipynb\\\\\\\")\\\\n\\\",\\n+    \\\"    mlflow.set_tag(\\\\\\\"ML_EXP_notebook_name\\\\\\\", \\\\\\\"RQ1.ipynb\\\\\\\")\\\\n\\\",\\n     \\\"\\\\n\\\",\\n     \\\"    # \\u2705 Dataset Metadata Tags\\\\n\\\",\\n-    \\\"    mlflow.set_tag(\\\\\\\"dataset_name\\\\\\\", \\\\\\\"Iris\\\\\\\") #TODO\\\\n\\\",\\n-    \\\"    mlflow.set_tag(\\\\\\\"dataset_version\\\\\\\", \\\\\\\"1.0.0\\\\\\\") #TODO\\\\n\\\",\\n-    \\\"    mlflow.set_tag(\\\\\\\"dataset_id\\\\\\\", \\\\\\\"iris_local\\\\\\\") #TODO\\\\n\\\",\\n+    \\\"    mlflow.set_tag(\\\\\\\"ML_EXP_dataset_name\\\\\\\", \\\\\\\"Iris\\\\\\\") #TODO\\\\n\\\",\\n+    \\\"    mlflow.set_tag(\\\\\\\"ML_EXP_dataset_version\\\\\\\", \\\\\\\"1.0.0\\\\\\\") #TODO\\\\n\\\",\\n+    \\\"    mlflow.set_tag(\\\\\\\"ML_EXP_dataset_id\\\\\\\", \\\\\\\"iris_local\\\\\\\") #TODO\\\\n\\\",\\n     \\\"\\\\n\\\",\\n     \\\"\\\\n\\\",\\n     \\\"    # \\u2500\\u2500\\u2500 2) Create a folder for this run\\u2019s plots \\u2500\\u2500\\u2500\\\\n\\\",\\n-    \\\"    plot_dir = os.path.join(\\\\\\\"plots\\\\\\\", model_name)\\\\n\\\",\\n+    \\\"    plot_dir = os.path.join(\\\\\\\"ML_EXP_plots\\\\\\\", model_name)\\\\n\\\",\\n     \\\"    os.makedirs(plot_dir, exist_ok=True)\\\\n\\\",\\n     \\\"\\\\n\\\",\\n     \\\"    # 1) Feature Importance Bar Chart\\\\n\\\",\\n@@ -1792,19 +1852,19 @@\\n     \\\"        previous_commit_url  = f\\\\\\\"{remote_url}/commit/{previous_commit_hash}\\\\\\\"\\\\n\\\",\\n     \\\"        current_commit_url = f\\\\\\\"{remote_url}/commit/{sha}\\\\\\\"\\\\n\\\",\\n     \\\"        diff_data = {\\\\n\\\",\\n-    \\\"            \\\\\\\"previous_commit\\\\\\\":  previous_commit_hash,\\\\n\\\",\\n-    \\\"            \\\\\\\"previous_commit_url\\\\\\\":previous_commit_url,\\\\n\\\",\\n-    \\\"            \\\\\\\"current_commit_url\\\\\\\":current_commit_url,\\\\n\\\",\\n-    \\\"            \\\\\\\"current_commit\\\\\\\": sha,\\\\n\\\",\\n-    \\\"            \\\\\\\"diff\\\\\\\": diff_text\\\\n\\\",\\n+    \\\"            \\\\\\\"GIT_previous_commit\\\\\\\":  previous_commit_hash,\\\\n\\\",\\n+    \\\"            \\\\\\\"GIT_previous_commit_url\\\\\\\":previous_commit_url,\\\\n\\\",\\n+    \\\"            \\\\\\\"GIT_current_commit_url\\\\\\\":current_commit_url,\\\\n\\\",\\n+    \\\"            \\\\\\\"GIT_current_commit\\\\\\\": sha,\\\\n\\\",\\n+    \\\"            \\\\\\\"GIT_diff\\\\\\\": diff_text\\\\n\\\",\\n     \\\"        }\\\\n\\\",\\n     \\\"        mlflow.log_dict(\\\\n\\\",\\n     \\\"            diff_data,\\\\n\\\",\\n-    \\\"            artifact_file=\\\\\\\"commit_diff.json\\\\\\\"\\\\n\\\",\\n+    \\\"            artifact_file=\\\\\\\"GIT_commit_diff.json\\\\\\\"\\\\n\\\",\\n     \\\"        )\\\\n\\\",\\n-    \\\"        mlflow.set_tag(\\\\\\\"git_previous_commit_hash\\\\\\\", previous_commit_hash)\\\\n\\\",\\n-    \\\"        mlflow.set_tag(\\\\\\\"git_current_commit_hash\\\\\\\", sha)\\\\n\\\",\\n-    \\\"        mlflow.set_tag(\\\\\\\"git__current_commit_url\\\\\\\", link) \\\\n\\\",\\n+    \\\"        mlflow.set_tag(\\\\\\\"GIT_previous_commit_hash\\\\\\\", previous_commit_hash)\\\\n\\\",\\n+    \\\"        mlflow.set_tag(\\\\\\\"GIT_current_commit_hash\\\\\\\", sha)\\\\n\\\",\\n+    \\\"        mlflow.set_tag(\\\\\\\"GIT_current_commit_url\\\\\\\", link) \\\\n\\\",\\n     \\\"\\\\n\\\",\\n     \\\"\\\\n\\\",\\n     \\\"    client   = MlflowClient()\\\\n\\\",\\n@@ -1865,15 +1925,15 @@\\n     \\\"    _gather()\\\\n\\\",\\n     \\\"     \\\\n\\\",\\n     \\\"    summary = {\\\\n\\\",\\n-    \\\"        \\\\\\\"run_id\\\\\\\":         run_id,\\\\n\\\",\\n-    \\\"        \\\\\\\"run_name\\\\\\\": run_info.run_name,\\\\n\\\",\\n-    \\\"        \\\\\\\"experiment_id\\\\\\\":  run_info.experiment_id,\\\\n\\\",\\n-    \\\"        \\\\\\\"start_time\\\\\\\":     run_info.start_time,\\\\n\\\",\\n-    \\\"        \\\\\\\"end_time\\\\\\\":       run_info.end_time,\\\\n\\\",\\n-    \\\"        \\\\\\\"params\\\\\\\":         params,\\\\n\\\",\\n-    \\\"        \\\\\\\"metrics\\\\\\\":        metrics,\\\\n\\\",\\n-    \\\"        \\\\\\\"tags\\\\\\\":           tags,\\\\n\\\",\\n-    \\\"        \\\\\\\"artifacts\\\\\\\":      artifact_meta\\\\n\\\",\\n+    \\\"        \\\\\\\"ML_EXP_run_id\\\\\\\":         run_id,\\\\n\\\",\\n+    \\\"        \\\\\\\"ML_EXP_run_name\\\\\\\": run_info.run_name,\\\\n\\\",\\n+    \\\"        \\\\\\\"ML_EXP_experiment_id\\\\\\\":  run_info.experiment_id,\\\\n\\\",\\n+    \\\"        \\\\\\\"ML_EXP_start_time\\\\\\\":     run_info.start_time,\\\\n\\\",\\n+    \\\"        \\\\\\\"ML_EXP_end_time\\\\\\\":       run_info.end_time,\\\\n\\\",\\n+    \\\"        \\\\\\\"ML_EXP_params\\\\\\\":         params,\\\\n\\\",\\n+    \\\"        \\\\\\\"ML_EXP_metrics\\\\\\\":        metrics,\\\\n\\\",\\n+    \\\"        \\\\\\\"ML_EXP_tags\\\\\\\":           tags,\\\\n\\\",\\n+    \\\"        \\\\\\\"ML_EXP_artifacts\\\\\\\":      artifact_meta\\\\n\\\",\\n     \\\"    }\\\\n\\\",\\n     \\\"    \\\\n\\\",\\n     \\\"\\\\n\\\",\\n@@ -1893,7 +1953,9 @@\\n     \\\"    \\\\n\\\",\\n     \\\"    # 4) (Optional) Mirror it into MLflow artifacts under a single folder\\\\n\\\",\\n     \\\"    mlflow.log_artifact(summary_local_path, artifact_path=\\\\\\\"run_summaries\\\\\\\")\\\\n\\\",\\n-    \\\"\\\\n\\\",\\n+    \\\"    # End time\\\\n\\\",\\n+    \\\"    end_time = datetime.now().isoformat()\\\\n\\\",\\n+    \\\"    mlflow.set_tag(\\\\\\\"PROV_endedAtTime\\\\\\\", end_time)\\\\n\\\",\\n     \\\"    mlflow.end_run()\\\"\\n    ]\\n   },\\ndiff --git a/notebooks/RQ_notebooks/Trained_models/RandomForest_Iris_v20250503_222538.pkl b/notebooks/RQ_notebooks/Trained_models/RandomForest_Iris_v20250503_222538.pkl\\nnew file mode 100644\\nindex 0000000..6ab7536\\nBinary files /dev/null and b/notebooks/RQ_notebooks/Trained_models/RandomForest_Iris_v20250503_222538.pkl differ\\ndiff --git a/notebooks/RQ_notebooks/Trained_models/RandomForest_Iris_v20250503_222930.pkl b/notebooks/RQ_notebooks/Trained_models/RandomForest_Iris_v20250503_222930.pkl\\nnew file mode 100644\\nindex 0000000..1d63669\\nBinary files /dev/null and b/notebooks/RQ_notebooks/Trained_models/RandomForest_Iris_v20250503_222930.pkl differ\\ndiff --git a/notebooks/RQ_notebooks/Trained_models/RandomForest_Iris_v20250503_230405.pkl b/notebooks/RQ_notebooks/Trained_models/RandomForest_Iris_v20250503_230405.pkl\\nnew file mode 100644\\nindex 0000000..4836a19\\nBinary files /dev/null and b/notebooks/RQ_notebooks/Trained_models/RandomForest_Iris_v20250503_230405.pkl differ\\ndiff --git a/notebooks/RQ_notebooks/Trained_models/RandomForest_Iris_v20250503_230628.pkl b/notebooks/RQ_notebooks/Trained_models/RandomForest_Iris_v20250503_230628.pkl\\nnew file mode 100644\\nindex 0000000..372ccc2\\nBinary files /dev/null and b/notebooks/RQ_notebooks/Trained_models/RandomForest_Iris_v20250503_230628.pkl differ\\ndiff --git a/notebooks/RQ_notebooks/Trained_models/RandomForest_Iris_v20250503_230848.pkl b/notebooks/RQ_notebooks/Trained_models/RandomForest_Iris_v20250503_230848.pkl\\nnew file mode 100644\\nindex 0000000..d0fcf62\\nBinary files /dev/null and b/notebooks/RQ_notebooks/Trained_models/RandomForest_Iris_v20250503_230848.pkl differ\\ndiff --git a/notebooks/RQ_notebooks/Trained_models/RandomForest_Iris_v20250504_111825.pkl b/notebooks/RQ_notebooks/Trained_models/RandomForest_Iris_v20250504_111825.pkl\\nnew file mode 100644\\nindex 0000000..222dbdf\\nBinary files /dev/null and b/notebooks/RQ_notebooks/Trained_models/RandomForest_Iris_v20250504_111825.pkl differ\\ndiff --git a/notebooks/RQ_notebooks/plots/RandomForest_Iris_v20250503_222538/confusion_matrix.png b/notebooks/RQ_notebooks/plots/RandomForest_Iris_v20250503_222538/confusion_matrix.png\\nnew file mode 100644\\nindex 0000000..5bf98dd\\nBinary files /dev/null and b/notebooks/RQ_notebooks/plots/RandomForest_Iris_v20250503_222538/confusion_matrix.png differ\\ndiff --git a/notebooks/RQ_notebooks/plots/RandomForest_Iris_v20250503_222538/feature_importances.png b/notebooks/RQ_notebooks/plots/RandomForest_Iris_v20250503_222538/feature_importances.png\\nnew file mode 100644\\nindex 0000000..65481a2\\nBinary files /dev/null and b/notebooks/RQ_notebooks/plots/RandomForest_Iris_v20250503_222538/feature_importances.png differ\\ndiff --git a/notebooks/RQ_notebooks/plots/RandomForest_Iris_v20250503_222538/pr_curve_cls_0.png b/notebooks/RQ_notebooks/plots/RandomForest_Iris_v20250503_222538/pr_curve_cls_0.png\\nnew file mode 100644\\nindex 0000000..a8d230a\\nBinary files /dev/null and b/notebooks/RQ_notebooks/plots/RandomForest_Iris_v20250503_222538/pr_curve_cls_0.png differ\\ndiff --git a/notebooks/RQ_notebooks/plots/RandomForest_Iris_v20250503_222538/pr_curve_cls_1.png b/notebooks/RQ_notebooks/plots/RandomForest_Iris_v20250503_222538/pr_curve_cls_1.png\\nnew file mode 100644\\nindex 0000000..b36796e\\nBinary files /dev/null and b/notebooks/RQ_notebooks/plots/RandomForest_Iris_v20250503_222538/pr_curve_cls_1.png differ\\ndiff --git a/notebooks/RQ_notebooks/plots/RandomForest_Iris_v20250503_222538/pr_curve_cls_2.png b/notebooks/RQ_notebooks/plots/RandomForest_Iris_v20250503_222538/pr_curve_cls_2.png\\nnew file mode 100644\\nindex 0000000..86bc90f\\nBinary files /dev/null and b/notebooks/RQ_notebooks/plots/RandomForest_Iris_v20250503_222538/pr_curve_cls_2.png differ\\ndiff --git a/notebooks/RQ_notebooks/plots/RandomForest_Iris_v20250503_222538/roc_curve_cls_0.png b/notebooks/RQ_notebooks/plots/RandomForest_Iris_v20250503_222538/roc_curve_cls_0.png\\nnew file mode 100644\\nindex 0000000..5ae6a09\\nBinary files /dev/null and b/notebooks/RQ_notebooks/plots/RandomForest_Iris_v20250503_222538/roc_curve_cls_0.png differ\\ndiff --git a/notebooks/RQ_notebooks/plots/RandomForest_Iris_v20250503_222538/roc_curve_cls_1.png b/notebooks/RQ_notebooks/plots/RandomForest_Iris_v20250503_222538/roc_curve_cls_1.png\\nnew file mode 100644\\nindex 0000000..7d3f039\\nBinary files /dev/null and b/notebooks/RQ_notebooks/plots/RandomForest_Iris_v20250503_222538/roc_curve_cls_1.png differ\\ndiff --git a/notebooks/RQ_notebooks/plots/RandomForest_Iris_v20250503_222538/roc_curve_cls_2.png b/notebooks/RQ_notebooks/plots/RandomForest_Iris_v20250503_222538/roc_curve_cls_2.png\\nnew file mode 100644\\nindex 0000000..24b4468\\nBinary files /dev/null and b/notebooks/RQ_notebooks/plots/RandomForest_Iris_v20250503_222538/roc_curve_cls_2.png differ\\ndiff --git a/notebooks/RQ_notebooks/plots/RandomForest_Iris_v20250503_222538/shap_summary.png b/notebooks/RQ_notebooks/plots/RandomForest_Iris_v20250503_222538/shap_summary.png\\nnew file mode 100644\\nindex 0000000..938d6fe\\nBinary files /dev/null and b/notebooks/RQ_notebooks/plots/RandomForest_Iris_v20250503_222538/shap_summary.png differ\\ndiff --git a/notebooks/RQ_notebooks/plots/RandomForest_Iris_v20250503_222930/confusion_matrix.png b/notebooks/RQ_notebooks/plots/RandomForest_Iris_v20250503_222930/confusion_matrix.png\\nnew file mode 100644\\nindex 0000000..5bf98dd\\nBinary files /dev/null and b/notebooks/RQ_notebooks/plots/RandomForest_Iris_v20250503_222930/confusion_matrix.png differ\\ndiff --git a/notebooks/RQ_notebooks/plots/RandomForest_Iris_v20250503_222930/feature_importances.png b/notebooks/RQ_notebooks/plots/RandomForest_Iris_v20250503_222930/feature_importances.png\\nnew file mode 100644\\nindex 0000000..65481a2\\nBinary files /dev/null and b/notebooks/RQ_notebooks/plots/RandomForest_Iris_v20250503_222930/feature_importances.png differ\\ndiff --git a/notebooks/RQ_notebooks/plots/RandomForest_Iris_v20250503_222930/pr_curve_cls_0.png b/notebooks/RQ_notebooks/plots/RandomForest_Iris_v20250503_222930/pr_curve_cls_0.png\\nnew file mode 100644\\nindex 0000000..a8d230a\\nBinary files /dev/null and b/notebooks/RQ_notebooks/plots/RandomForest_Iris_v20250503_222930/pr_curve_cls_0.png differ\\ndiff --git a/notebooks/RQ_notebooks/plots/RandomForest_Iris_v20250503_222930/pr_curve_cls_1.png b/notebooks/RQ_notebooks/plots/RandomForest_Iris_v20250503_222930/pr_curve_cls_1.png\\nnew file mode 100644\\nindex 0000000..b36796e\\nBinary files /dev/null and b/notebooks/RQ_notebooks/plots/RandomForest_Iris_v20250503_222930/pr_curve_cls_1.png differ\\ndiff --git a/notebooks/RQ_notebooks/plots/RandomForest_Iris_v20250503_222930/pr_curve_cls_2.png b/notebooks/RQ_notebooks/plots/RandomForest_Iris_v20250503_222930/pr_curve_cls_2.png\\nnew file mode 100644\\nindex 0000000..86bc90f\\nBinary files /dev/null and b/notebooks/RQ_notebooks/plots/RandomForest_Iris_v20250503_222930/pr_curve_cls_2.png differ\\ndiff --git a/notebooks/RQ_notebooks/plots/RandomForest_Iris_v20250503_222930/roc_curve_cls_0.png b/notebooks/RQ_notebooks/plots/RandomForest_Iris_v20250503_222930/roc_curve_cls_0.png\\nnew file mode 100644\\nindex 0000000..5ae6a09\\nBinary files /dev/null and b/notebooks/RQ_notebooks/plots/RandomForest_Iris_v20250503_222930/roc_curve_cls_0.png differ\\ndiff --git a/notebooks/RQ_notebooks/plots/RandomForest_Iris_v20250503_222930/roc_curve_cls_1.png b/notebooks/RQ_notebooks/plots/RandomForest_Iris_v20250503_222930/roc_curve_cls_1.png\\nnew file mode 100644\\nindex 0000000..7d3f039\\nBinary files /dev/null and b/notebooks/RQ_notebooks/plots/RandomForest_Iris_v20250503_222930/roc_curve_cls_1.png differ\\ndiff --git a/notebooks/RQ_notebooks/plots/RandomForest_Iris_v20250503_222930/roc_curve_cls_2.png b/notebooks/RQ_notebooks/plots/RandomForest_Iris_v20250503_222930/roc_curve_cls_2.png\\nnew file mode 100644\\nindex 0000000..24b4468\\nBinary files /dev/null and b/notebooks/RQ_notebooks/plots/RandomForest_Iris_v20250503_222930/roc_curve_cls_2.png differ\\ndiff --git a/notebooks/RQ_notebooks/plots/RandomForest_Iris_v20250503_222930/shap_summary.png b/notebooks/RQ_notebooks/plots/RandomForest_Iris_v20250503_222930/shap_summary.png\\nnew file mode 100644\\nindex 0000000..1342691\\nBinary files /dev/null and b/notebooks/RQ_notebooks/plots/RandomForest_Iris_v20250503_222930/shap_summary.png differ\\ndiff --git a/notebooks/RQ_notebooks/plots/RandomForest_Iris_v20250503_230405/confusion_matrix.png b/notebooks/RQ_notebooks/plots/RandomForest_Iris_v20250503_230405/confusion_matrix.png\\nnew file mode 100644\\nindex 0000000..5bf98dd\\nBinary files /dev/null and b/notebooks/RQ_notebooks/plots/RandomForest_Iris_v20250503_230405/confusion_matrix.png differ\\ndiff --git a/notebooks/RQ_notebooks/plots/RandomForest_Iris_v20250503_230405/feature_importances.png b/notebooks/RQ_notebooks/plots/RandomForest_Iris_v20250503_230405/feature_importances.png\\nnew file mode 100644\\nindex 0000000..65481a2\\nBinary files /dev/null and b/notebooks/RQ_notebooks/plots/RandomForest_Iris_v20250503_230405/feature_importances.png differ\\ndiff --git a/notebooks/RQ_notebooks/plots/RandomForest_Iris_v20250503_230405/pr_curve_cls_0.png b/notebooks/RQ_notebooks/plots/RandomForest_Iris_v20250503_230405/pr_curve_cls_0.png\\nnew file mode 100644\\nindex 0000000..a8d230a\\nBinary files /dev/null and b/notebooks/RQ_notebooks/plots/RandomForest_Iris_v20250503_230405/pr_curve_cls_0.png differ\\ndiff --git a/notebooks/RQ_notebooks/plots/RandomForest_Iris_v20250503_230405/pr_curve_cls_1.png b/notebooks/RQ_notebooks/plots/RandomForest_Iris_v20250503_230405/pr_curve_cls_1.png\\nnew file mode 100644\\nindex 0000000..b36796e\\nBinary files /dev/null and b/notebooks/RQ_notebooks/plots/RandomForest_Iris_v20250503_230405/pr_curve_cls_1.png differ\\ndiff --git a/notebooks/RQ_notebooks/plots/RandomForest_Iris_v20250503_230405/pr_curve_cls_2.png b/notebooks/RQ_notebooks/plots/RandomForest_Iris_v20250503_230405/pr_curve_cls_2.png\\nnew file mode 100644\\nindex 0000000..86bc90f\\nBinary files /dev/null and b/notebooks/RQ_notebooks/plots/RandomForest_Iris_v20250503_230405/pr_curve_cls_2.png differ\\ndiff --git a/notebooks/RQ_notebooks/plots/RandomForest_Iris_v20250503_230405/roc_curve_cls_0.png b/notebooks/RQ_notebooks/plots/RandomForest_Iris_v20250503_230405/roc_curve_cls_0.png\\nnew file mode 100644\\nindex 0000000..5ae6a09\\nBinary files /dev/null and b/notebooks/RQ_notebooks/plots/RandomForest_Iris_v20250503_230405/roc_curve_cls_0.png differ\\ndiff --git a/notebooks/RQ_notebooks/plots/RandomForest_Iris_v20250503_230405/roc_curve_cls_1.png b/notebooks/RQ_notebooks/plots/RandomForest_Iris_v20250503_230405/roc_curve_cls_1.png\\nnew file mode 100644\\nindex 0000000..7d3f039\\nBinary files /dev/null and b/notebooks/RQ_notebooks/plots/RandomForest_Iris_v20250503_230405/roc_curve_cls_1.png differ\\ndiff --git a/notebooks/RQ_notebooks/plots/RandomForest_Iris_v20250503_230405/roc_curve_cls_2.png b/notebooks/RQ_notebooks/plots/RandomForest_Iris_v20250503_230405/roc_curve_cls_2.png\\nnew file mode 100644\\nindex 0000000..24b4468\\nBinary files /dev/null and b/notebooks/RQ_notebooks/plots/RandomForest_Iris_v20250503_230405/roc_curve_cls_2.png differ\\ndiff --git a/notebooks/RQ_notebooks/plots/RandomForest_Iris_v20250503_230405/shap_summary.png b/notebooks/RQ_notebooks/plots/RandomForest_Iris_v20250503_230405/shap_summary.png\\nnew file mode 100644\\nindex 0000000..b43aecf\\nBinary files /dev/null and b/notebooks/RQ_notebooks/plots/RandomForest_Iris_v20250503_230405/shap_summary.png differ\\ndiff --git a/notebooks/RQ_notebooks/plots/RandomForest_Iris_v20250503_230628/confusion_matrix.png b/notebooks/RQ_notebooks/plots/RandomForest_Iris_v20250503_230628/confusion_matrix.png\\nnew file mode 100644\\nindex 0000000..5bf98dd\\nBinary files /dev/null and b/notebooks/RQ_notebooks/plots/RandomForest_Iris_v20250503_230628/confusion_matrix.png differ\\ndiff --git a/notebooks/RQ_notebooks/plots/RandomForest_Iris_v20250503_230628/feature_importances.png b/notebooks/RQ_notebooks/plots/RandomForest_Iris_v20250503_230628/feature_importances.png\\nnew file mode 100644\\nindex 0000000..65481a2\\nBinary files /dev/null and b/notebooks/RQ_notebooks/plots/RandomForest_Iris_v20250503_230628/feature_importances.png differ\\ndiff --git a/notebooks/RQ_notebooks/plots/RandomForest_Iris_v20250503_230628/pr_curve_cls_0.png b/notebooks/RQ_notebooks/plots/RandomForest_Iris_v20250503_230628/pr_curve_cls_0.png\\nnew file mode 100644\\nindex 0000000..a8d230a\\nBinary files /dev/null and b/notebooks/RQ_notebooks/plots/RandomForest_Iris_v20250503_230628/pr_curve_cls_0.png differ\\ndiff --git a/notebooks/RQ_notebooks/plots/RandomForest_Iris_v20250503_230628/pr_curve_cls_1.png b/notebooks/RQ_notebooks/plots/RandomForest_Iris_v20250503_230628/pr_curve_cls_1.png\\nnew file mode 100644\\nindex 0000000..b36796e\\nBinary files /dev/null and b/notebooks/RQ_notebooks/plots/RandomForest_Iris_v20250503_230628/pr_curve_cls_1.png differ\\ndiff --git a/notebooks/RQ_notebooks/plots/RandomForest_Iris_v20250503_230628/pr_curve_cls_2.png b/notebooks/RQ_notebooks/plots/RandomForest_Iris_v20250503_230628/pr_curve_cls_2.png\\nnew file mode 100644\\nindex 0000000..86bc90f\\nBinary files /dev/null and b/notebooks/RQ_notebooks/plots/RandomForest_Iris_v20250503_230628/pr_curve_cls_2.png differ\\ndiff --git a/notebooks/RQ_notebooks/plots/RandomForest_Iris_v20250503_230628/roc_curve_cls_0.png b/notebooks/RQ_notebooks/plots/RandomForest_Iris_v20250503_230628/roc_curve_cls_0.png\\nnew file mode 100644\\nindex 0000000..5ae6a09\\nBinary files /dev/null and b/notebooks/RQ_notebooks/plots/RandomForest_Iris_v20250503_230628/roc_curve_cls_0.png differ\\ndiff --git a/notebooks/RQ_notebooks/plots/RandomForest_Iris_v20250503_230628/roc_curve_cls_1.png b/notebooks/RQ_notebooks/plots/RandomForest_Iris_v20250503_230628/roc_curve_cls_1.png\\nnew file mode 100644\\nindex 0000000..7d3f039\\nBinary files /dev/null and b/notebooks/RQ_notebooks/plots/RandomForest_Iris_v20250503_230628/roc_curve_cls_1.png differ\\ndiff --git a/notebooks/RQ_notebooks/plots/RandomForest_Iris_v20250503_230628/roc_curve_cls_2.png b/notebooks/RQ_notebooks/plots/RandomForest_Iris_v20250503_230628/roc_curve_cls_2.png\\nnew file mode 100644\\nindex 0000000..24b4468\\nBinary files /dev/null and b/notebooks/RQ_notebooks/plots/RandomForest_Iris_v20250503_230628/roc_curve_cls_2.png differ\\ndiff --git a/notebooks/RQ_notebooks/plots/RandomForest_Iris_v20250503_230628/shap_summary.png b/notebooks/RQ_notebooks/plots/RandomForest_Iris_v20250503_230628/shap_summary.png\\nnew file mode 100644\\nindex 0000000..132040b\\nBinary files /dev/null and b/notebooks/RQ_notebooks/plots/RandomForest_Iris_v20250503_230628/shap_summary.png differ\\ndiff --git a/notebooks/RQ_notebooks/plots/RandomForest_Iris_v20250503_230848/confusion_matrix.png b/notebooks/RQ_notebooks/plots/RandomForest_Iris_v20250503_230848/confusion_matrix.png\\nnew file mode 100644\\nindex 0000000..5bf98dd\\nBinary files /dev/null and b/notebooks/RQ_notebooks/plots/RandomForest_Iris_v20250503_230848/confusion_matrix.png differ\\ndiff --git a/notebooks/RQ_notebooks/plots/RandomForest_Iris_v20250503_230848/feature_importances.png b/notebooks/RQ_notebooks/plots/RandomForest_Iris_v20250503_230848/feature_importances.png\\nnew file mode 100644\\nindex 0000000..65481a2\\nBinary files /dev/null and b/notebooks/RQ_notebooks/plots/RandomForest_Iris_v20250503_230848/feature_importances.png differ\\ndiff --git a/notebooks/RQ_notebooks/plots/RandomForest_Iris_v20250503_230848/pr_curve_cls_0.png b/notebooks/RQ_notebooks/plots/RandomForest_Iris_v20250503_230848/pr_curve_cls_0.png\\nnew file mode 100644\\nindex 0000000..a8d230a\\nBinary files /dev/null and b/notebooks/RQ_notebooks/plots/RandomForest_Iris_v20250503_230848/pr_curve_cls_0.png differ\\ndiff --git a/notebooks/RQ_notebooks/plots/RandomForest_Iris_v20250503_230848/pr_curve_cls_1.png b/notebooks/RQ_notebooks/plots/RandomForest_Iris_v20250503_230848/pr_curve_cls_1.png\\nnew file mode 100644\\nindex 0000000..b36796e\\nBinary files /dev/null and b/notebooks/RQ_notebooks/plots/RandomForest_Iris_v20250503_230848/pr_curve_cls_1.png differ\\ndiff --git a/notebooks/RQ_notebooks/plots/RandomForest_Iris_v20250503_230848/pr_curve_cls_2.png b/notebooks/RQ_notebooks/plots/RandomForest_Iris_v20250503_230848/pr_curve_cls_2.png\\nnew file mode 100644\\nindex 0000000..86bc90f\\nBinary files /dev/null and b/notebooks/RQ_notebooks/plots/RandomForest_Iris_v20250503_230848/pr_curve_cls_2.png differ\\ndiff --git a/notebooks/RQ_notebooks/plots/RandomForest_Iris_v20250503_230848/roc_curve_cls_0.png b/notebooks/RQ_notebooks/plots/RandomForest_Iris_v20250503_230848/roc_curve_cls_0.png\\nnew file mode 100644\\nindex 0000000..5ae6a09\\nBinary files /dev/null and b/notebooks/RQ_notebooks/plots/RandomForest_Iris_v20250503_230848/roc_curve_cls_0.png differ\\ndiff --git a/notebooks/RQ_notebooks/plots/RandomForest_Iris_v20250503_230848/roc_curve_cls_1.png b/notebooks/RQ_notebooks/plots/RandomForest_Iris_v20250503_230848/roc_curve_cls_1.png\\nnew file mode 100644\\nindex 0000000..7d3f039\\nBinary files /dev/null and b/notebooks/RQ_notebooks/plots/RandomForest_Iris_v20250503_230848/roc_curve_cls_1.png differ\\ndiff --git a/notebooks/RQ_notebooks/plots/RandomForest_Iris_v20250503_230848/roc_curve_cls_2.png b/notebooks/RQ_notebooks/plots/RandomForest_Iris_v20250503_230848/roc_curve_cls_2.png\\nnew file mode 100644\\nindex 0000000..24b4468\\nBinary files /dev/null and b/notebooks/RQ_notebooks/plots/RandomForest_Iris_v20250503_230848/roc_curve_cls_2.png differ\\ndiff --git a/notebooks/RQ_notebooks/plots/RandomForest_Iris_v20250503_230848/shap_summary.png b/notebooks/RQ_notebooks/plots/RandomForest_Iris_v20250503_230848/shap_summary.png\\nnew file mode 100644\\nindex 0000000..ed78b39\\nBinary files /dev/null and b/notebooks/RQ_notebooks/plots/RandomForest_Iris_v20250503_230848/shap_summary.png differ\\n\"\n}"
    },
    {
      "path": "RandomForest_Iris_v20250504_111825/RandomForest_Iris_v20250504_111825.pkl",
      "type": "other",
      "uri": "file:///C:/Users/reema/REPO/notebooks/RQ_notebooks/mlruns/0/f9bb042a0d244362b0daacf6bc782cb6/artifacts/RandomForest_Iris_v20250504_111825/RandomForest_Iris_v20250504_111825.pkl"
    },
    {
      "path": "confusion_matrix.png",
      "type": "image",
      "uri": "file:///C:/Users/reema/REPO/notebooks/RQ_notebooks/mlruns/0/f9bb042a0d244362b0daacf6bc782cb6/artifacts/confusion_matrix.png"
    },
    {
      "path": "estimator.html",
      "type": "other",
      "uri": "file:///C:/Users/reema/REPO/notebooks/RQ_notebooks/mlruns/0/f9bb042a0d244362b0daacf6bc782cb6/artifacts/estimator.html"
    },
    {
      "path": "feature_importances.png",
      "type": "image",
      "uri": "file:///C:/Users/reema/REPO/notebooks/RQ_notebooks/mlruns/0/f9bb042a0d244362b0daacf6bc782cb6/artifacts/feature_importances.png"
    },
    {
      "path": "label_mapping.json",
      "type": "text",
      "content": "{\n  \"0\": \"Iris-setosa\",\n  \"1\": \"Iris-versicolor\",\n  \"2\": \"Iris-virginica\"\n}"
    },
    {
      "path": "model/MLmodel",
      "type": "other",
      "uri": "file:///C:/Users/reema/REPO/notebooks/RQ_notebooks/mlruns/0/f9bb042a0d244362b0daacf6bc782cb6/artifacts/model/MLmodel"
    },
    {
      "path": "model/conda.yaml",
      "type": "other",
      "uri": "file:///C:/Users/reema/REPO/notebooks/RQ_notebooks/mlruns/0/f9bb042a0d244362b0daacf6bc782cb6/artifacts/model/conda.yaml"
    },
    {
      "path": "model/input_example.json",
      "type": "text",
      "content": "{\"columns\": [\"sepallengthcm\", \"sepalwidthcm\", \"petallengthcm\", \"petalwidthcm\"], \"data\": [[4.6, 3.6, 1.0, 0.2], [5.7, 4.4, 1.5, 0.4], [6.7, 3.1, 4.4, 1.4], [4.8, 3.4, 1.6, 0.2], [4.4, 3.2, 1.3, 0.2]]}"
    },
    {
      "path": "model/model.pkl",
      "type": "other",
      "uri": "file:///C:/Users/reema/REPO/notebooks/RQ_notebooks/mlruns/0/f9bb042a0d244362b0daacf6bc782cb6/artifacts/model/model.pkl"
    },
    {
      "path": "model/python_env.yaml",
      "type": "other",
      "uri": "file:///C:/Users/reema/REPO/notebooks/RQ_notebooks/mlruns/0/f9bb042a0d244362b0daacf6bc782cb6/artifacts/model/python_env.yaml"
    },
    {
      "path": "model/requirements.txt",
      "type": "text",
      "content": "mlflow==2.21.2\nbackports-functools-lru-cache==1.6.4\nbackports-tempfile==1.0\ncloudpickle==2.2.1\njaraco-classes==3.2.1\njaraco-collections==5.1.0\nlz4==4.3.2\nnumpy==1.24.4\npathlib==1.0.1\npsutil==5.9.5\nscikit-learn==1.3.0\nscipy==1.11.1"
    },
    {
      "path": "model/serving_input_example.json",
      "type": "text",
      "content": "{\n  \"dataframe_split\": {\n    \"columns\": [\n      \"sepallengthcm\",\n      \"sepalwidthcm\",\n      \"petallengthcm\",\n      \"petalwidthcm\"\n    ],\n    \"data\": [\n      [\n        4.6,\n        3.6,\n        1.0,\n        0.2\n      ],\n      [\n        5.7,\n        4.4,\n        1.5,\n        0.4\n      ],\n      [\n        6.7,\n        3.1,\n        4.4,\n        1.4\n      ],\n      [\n        4.8,\n        3.4,\n        1.6,\n        0.2\n      ],\n      [\n        4.4,\n        3.2,\n        1.3,\n        0.2\n      ]\n    ]\n  }\n}"
    },
    {
      "path": "pr_curve_cls_0.png",
      "type": "image",
      "uri": "file:///C:/Users/reema/REPO/notebooks/RQ_notebooks/mlruns/0/f9bb042a0d244362b0daacf6bc782cb6/artifacts/pr_curve_cls_0.png"
    },
    {
      "path": "pr_curve_cls_1.png",
      "type": "image",
      "uri": "file:///C:/Users/reema/REPO/notebooks/RQ_notebooks/mlruns/0/f9bb042a0d244362b0daacf6bc782cb6/artifacts/pr_curve_cls_1.png"
    },
    {
      "path": "pr_curve_cls_2.png",
      "type": "image",
      "uri": "file:///C:/Users/reema/REPO/notebooks/RQ_notebooks/mlruns/0/f9bb042a0d244362b0daacf6bc782cb6/artifacts/pr_curve_cls_2.png"
    },
    {
      "path": "public_datasetRepository_metadata.json",
      "type": "text",
      "content": "{\n  \"zenodo\": {\n    \"title\": \"Scikit-Learn Iris\",\n    \"doi\": \"10.5281/ZENODO.1404173\",\n    \"authors\": [\n      \"Marshall Michael\"\n    ],\n    \"published\": \"2018-8-27\",\n    \"publisher\": \"Zenodo\"\n  }\n}"
    },
    {
      "path": "roc_curve_cls_0.png",
      "type": "image",
      "uri": "file:///C:/Users/reema/REPO/notebooks/RQ_notebooks/mlruns/0/f9bb042a0d244362b0daacf6bc782cb6/artifacts/roc_curve_cls_0.png"
    },
    {
      "path": "roc_curve_cls_1.png",
      "type": "image",
      "uri": "file:///C:/Users/reema/REPO/notebooks/RQ_notebooks/mlruns/0/f9bb042a0d244362b0daacf6bc782cb6/artifacts/roc_curve_cls_1.png"
    },
    {
      "path": "roc_curve_cls_2.png",
      "type": "image",
      "uri": "file:///C:/Users/reema/REPO/notebooks/RQ_notebooks/mlruns/0/f9bb042a0d244362b0daacf6bc782cb6/artifacts/roc_curve_cls_2.png"
    },
    {
      "path": "shap_summary.png",
      "type": "image",
      "uri": "file:///C:/Users/reema/REPO/notebooks/RQ_notebooks/mlruns/0/f9bb042a0d244362b0daacf6bc782cb6/artifacts/shap_summary.png"
    },
    {
      "path": "training_confusion_matrix.png",
      "type": "image",
      "uri": "file:///C:/Users/reema/REPO/notebooks/RQ_notebooks/mlruns/0/f9bb042a0d244362b0daacf6bc782cb6/artifacts/training_confusion_matrix.png"
    }
  ]
}